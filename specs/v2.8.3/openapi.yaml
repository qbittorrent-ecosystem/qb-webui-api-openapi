openapi: 3.0.3
info:
  title: qBittorrent WebUI API
  description: |
    - All API methods are under `/api/v2/APIName/methodName`, where `APIName` is a certain subgroup of API methods whose functionality is related.
    - Either `GET` or `POST` can be used as the request type for all API methods.
    - All API methods require [authentication](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#authentication) (except the `/api/v2/auth/login` method itself, obviously).
  termsOfService: 'https://github.com/qbittorrent/qBittorrent/blob/master/COPYING'
  license:
    name: GNU GPLv2
    url: 'https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html'
  version: 2.8.3
servers:
  - url: 'http://localhost:8080/api/v2'
    description: qBittorrent Web UI API
paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: |
        Upon success, the response will contain a cookie with your SID. You must supply the cookie whenever you want to perform an operation that requires authentication.
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#login'
        description: WebUI-API on qBittorrent wiki
      operationId: authLoginPost
      parameters:
        - in: header
          name: Referer
          schema:
            type: string
        - in: header
          name: Origin
          schema:
            type: string
      requestBody:
        description: |
          Example showing how to login and execute a command that requires authentication using `curl`:

          ```
          $ curl -i --header 'Referer: http://localhost:8080' --data 'username=admin&password=adminadmin' http://localhost:8080/api/v2/auth/login
          HTTP/1.1 200 OK
          Content-Encoding:
          Content-Length: 3
          Content-Type: text/plain; charset=UTF-8
          Set-Cookie: SID=hBc7TxF76ERhvIw0jQQ4LZ7Z1jQUV0tQ; path=/
          $ curl http://localhost:8080/api/v2/torrents/info --cookie "SID=hBc7TxF76ERhvIw0jQQ4LZ7Z1jQUV0tQ"
          ```

          Note: Set `Referer` or `Origin` header to the exact same domain and port as used in the HTTP query `Host` header.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                  format: password
              required:
                - username
                - password
              example: username=admin&password=adminadmin
        required: true
      responses:
        '200':
          description: All other scenarios
          headers:
            Set-Cookie:
              schema:
                type: string
                example: SID=hBc7TxF76ERhvIw0jQQ4LZ7Z1jQUV0tQ
          content:
            text/plain:
              schema:
                type: string
        '403':
          description: User's IP is banned for too many failed login attempts
  /auth/logout:
    post:
      tags:
        - auth
      summary: Logout
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#logout'
        description: WebUI-API on qBittorrent wiki
      operationId: authLogoutPost
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /app/version:
    get:
      tags:
        - app
      summary: Get application version
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-application-version'
        description: WebUI-API on qBittorrent wiki
      operationId: appVersionGet
      responses:
        '200':
          description: All scenarios
          content:
            text/plain:
              schema:
                type: string
                description: 'The response is a string with the application version, e.g. `v4.1.3`'
                example: v4.1.3
      security:
        - sid: []
  /app/webapiVersion:
    get:
      tags:
        - app
      summary: Get API version
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-api-version'
        description: WebUI-API on qBittorrent wiki
      operationId: appWebapiVersionGet
      responses:
        '200':
          description: All scenarios
          content:
            text/plain:
              schema:
                type: string
                description: 'The response is a string with the WebAPI version, e.g. `2.0`'
                example: '2.0'
      security:
        - sid: []
  /app/buildInfo:
    get:
      tags:
        - app
      summary: Get build info
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-build-info'
        description: WebUI-API on qBittorrent wiki
      operationId: appBuildInfoGet
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildInfo'
      security:
        - sid: []
  /app/shutdown:
    get:
      tags:
        - app
      summary: Shutdown application
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#shutdown-application'
        description: WebUI-API on qBittorrent wiki
      operationId: appShutdownGet
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /app/preferences:
    get:
      tags:
        - app
      summary: Get application preferences
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-application-preferences'
        description: WebUI-API on qBittorrent wiki
      operationId: appPreferencesGet
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Preferences'
                description: The response is a JSON object with several fields (key-value) pairs representing the application's settings. The contents may vary depending on which settings are present in qBittorrent.ini.
                example: |
                  {
                    "add_trackers": "",
                    "add_trackers_enabled": false,
                    "alt_dl_limit": 10240,
                    "alt_up_limit": 10240,
                    "alternative_webui_enabled": false,
                    "alternative_webui_path": "/home/user/Documents/qbit-webui",
                    "announce_ip": "",
                    "announce_to_all_tiers": true,
                    "announce_to_all_trackers": false,
                    "anonymous_mode": false,
                    "async_io_threads": 4,
                    "auto_delete_mode": 0,
                    "auto_tmm_enabled": false,
                    "autorun_enabled": false,
                    "autorun_program": "",
                    "banned_IPs": "",
                    "bittorrent_protocol": 0,
                    "bypass_auth_subnet_whitelist": "",
                    "bypass_auth_subnet_whitelist_enabled": false,
                    "bypass_local_auth": false,
                    "category_changed_tmm_enabled": false,
                    "checking_memory_use": 32,
                    "create_subfolder_enabled": true,
                    "current_interface_address": "",
                    "current_network_interface": "",
                    "dht": true,
                    "disk_cache": -1,
                    "disk_cache_ttl": 60,
                    "dl_limit": 0,
                    "dont_count_slow_torrents": false,
                    "dyndns_domain": "changeme.dyndns.org",
                    "dyndns_enabled": false,
                    "dyndns_password": "",
                    "dyndns_service": 0,
                    "dyndns_username": "",
                    "embedded_tracker_port": 9000,
                    "enable_coalesce_read_write": false,
                    "enable_embedded_tracker": false,
                    "enable_multi_connections_from_same_ip": false,
                    "enable_os_cache": true,
                    "enable_piece_extent_affinity": false,
                    "enable_upload_suggestions": false,
                    "encryption": 0,
                    "export_dir": "/home/user/Downloads/all",
                    "export_dir_fin": "/home/user/Downloads/completed",
                    "file_pool_size": 40,
                    "incomplete_files_ext": false,
                    "ip_filter_enabled": false,
                    "ip_filter_path": "",
                    "ip_filter_trackers": false,
                    "limit_lan_peers": true,
                    "limit_tcp_overhead": false,
                    "limit_utp_rate": true,
                    "listen_port": 58925,
                    "locale": "en",
                    "lsd": true,
                    "mail_notification_auth_enabled": false,
                    "mail_notification_email": "",
                    "mail_notification_enabled": false,
                    "mail_notification_password": "",
                    "mail_notification_sender": "qBittorrent_notification@example.com",
                    "mail_notification_smtp": "smtp.changeme.com",
                    "mail_notification_ssl_enabled": false,
                    "mail_notification_username": "",
                    "max_active_downloads": 3,
                    "max_active_torrents": 5,
                    "max_active_uploads": 3,
                    "max_connec": 500,
                    "max_connec_per_torrent": 100,
                    "max_ratio": -1,
                    "max_ratio_act": 0,
                    "max_ratio_enabled": false,
                    "max_seeding_time": -1,
                    "max_seeding_time_enabled": false,
                    "max_uploads": -1,
                    "max_uploads_per_torrent": -1,
                    "outgoing_ports_max": 0,
                    "outgoing_ports_min": 0,
                    "pex": true,
                    "preallocate_all": false,
                    "proxy_auth_enabled": false,
                    "proxy_ip": "0.0.0.0",
                    "proxy_password": "",
                    "proxy_peer_connections": false,
                    "proxy_port": 8080,
                    "proxy_torrents_only": false,
                    "proxy_type": 0,
                    "proxy_username": "",
                    "queueing_enabled": false,
                    "random_port": false,
                    "recheck_completed_torrents": false,
                    "resolve_peer_countries": true,
                    "rss_auto_downloading_enabled":true,
                    "rss_download_repack_proper_episodes":true,
                    "rss_max_articles_per_feed":50,
                    "rss_processing_enabled":true,
                    "rss_refresh_interval":30,
                    "rss_smart_episode_filters":"s(\\d+)e(\\d+)\n(\\d+)x(\\d+)\n(\\d{4}[.\\-]\\d{1,2}[.\\-]\\d{1,2})",
                    "save_path": "/home/user/Downloads/",
                    "save_path_changed_tmm_enabled": false,
                    "save_resume_data_interval": 60,
                    "scan_dirs":
                    {
                        "/home/user/Downloads/incoming/games": 0,
                        "/home/user/Downloads/incoming/movies": 1
                    },
                    "schedule_from_hour": 8,
                    "schedule_from_min": 0,
                    "schedule_to_hour": 20,
                    "schedule_to_min": 0,
                    "scheduler_days": 0,
                    "scheduler_enabled": false,
                    "send_buffer_low_watermark": 10,
                    "send_buffer_watermark": 500,
                    "send_buffer_watermark_factor": 50,
                    "slow_torrent_dl_rate_threshold": 2,
                    "slow_torrent_inactive_timer": 60,
                    "slow_torrent_ul_rate_threshold": 2,
                    "socket_backlog_size": 30,
                    "start_paused_enabled": false,
                    "stop_tracker_timeout": 1,
                    "temp_path": "/home/user/Downloads/temp",
                    "temp_path_enabled": false,
                    "torrent_changed_tmm_enabled": true,
                    "up_limit": 0,
                    "upload_choking_algorithm": 1,
                    "upload_slots_behavior": 0,
                    "upnp": true,
                    "use_https": false,
                    "utp_tcp_mixed_mode": 0,
                    "web_ui_address": "*",
                    "web_ui_ban_duration": 3600,
                    "web_ui_clickjacking_protection_enabled": true,
                    "web_ui_csrf_protection_enabled": true,
                    "web_ui_custom_http_headers": "",
                    "web_ui_domain_list": "*",
                    "web_ui_host_header_validation_enabled": true,
                    "web_ui_https_cert_path": "",
                    "web_ui_https_key_path": "",
                    "web_ui_max_auth_fail_count": 5,
                    "web_ui_port": 8080,
                    "web_ui_secure_cookie_enabled": true,
                    "web_ui_session_timeout": 3600,
                    "web_ui_upnp": false,
                    "web_ui_use_custom_http_headers_enabled": false,
                    "web_ui_username": "admin"
                  }
      security:
        - sid: []
  /app/setPreferences:
    post:
      tags:
        - app
      summary: Set application preferences
      description: |
        Notes:
        1. There is no need to pass all possible preferences' `token:value` pairs if you only want to change one option
        2. Paths in `scan_dirs` must exist, otherwise this option will have no effect
        3. String values must be quoted; integer and boolean values must never be quoted

        For a list of possible preference options see [Get application preferences](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-application-preferences)
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-application-preferences'
        description: WebUI-API on qBittorrent wiki
      operationId: appSetPreferencesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                json:
                  $ref: '#/components/schemas/SetPreferences'
              required:
                - json
            example:
              json: '{"save_path":"C:/Users/Dayman/Downloads","queueing_enabled":false,"scan_dirs":{"C:/Games": 0,"D:/Downloads": 1}}'
            encoding:
              json:
                contentType: application/json
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /app/defaultSavePath:
    get:
      tags:
        - app
      summary: Get default save path
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-default-save-path'
        description: WebUI-API on qBittorrent wiki
      operationId: appDefaultSavePathGet
      responses:
        '200':
          description: All scenarios
          content:
            text/plain:
              schema:
                type: string
                description: 'The response is a string with the default save path, e.g. `C:/Users/Dayman/Downloads`.'
                example: 'C:/Users/Dayman/Downloads'
      security:
        - sid: []
  /log/main:
    post:
      tags:
        - log
      summary: Get log
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-log'
        description: WebUI-API on qBittorrent wiki
      operationId: logMainPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                normal:
                  type: boolean
                  description: 'Include normal messages (default: `true`)'
                  default: true
                info:
                  type: boolean
                  description: 'Include info messages (default: `true`)'
                  default: true
                warning:
                  type: boolean
                  description: 'Include warning messages (default: `true`)'
                  default: true
                critical:
                  type: boolean
                  description: 'Include critical messages (default: `true`)'
                  default: true
                last_known_id:
                  type: integer
                  format: int64
                  description: 'Exclude messages with "message id" <= `last_known_id` (default: `-1`)'
                  default: -1
              required:
                - normal
                - info
                - warning
                - critical
                - last_known_id
            example: /api/v2/log/main?normal=true&info=true&warning=true&critical=true&last_known_id=-1
        required: true
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                description: |
                  The response is a JSON array in which each element is an entry of the log.

                  Each element of the array has the following properties:
                items:
                  $ref: '#/components/schemas/MainLog'
              example: |
                [
                  {
                    "id":0,
                    "message":"qBittorrent v3.4.0 started",
                    "timestamp":1507969127860,
                    "type":1
                  },
                  {
                    "id":1,
                    "message":"qBittorrent is trying to listen on any interface port: 19036",
                    "timestamp":1507969127869,
                    "type":2
                  },
                  {
                    "id":2,
                    "message":"Peer ID: -qB3400-",
                    "timestamp":1507969127870,
                    "type":1
                  },
                  {
                    "id":3,
                    "message":"HTTP User-Agent is 'qBittorrent/3.4.0'",
                    "timestamp":1507969127870,
                    "type":1
                  },
                  {
                    "id":4,
                    "message":"DHT support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":5,
                    "message":"Local Peer Discovery support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":6,
                    "message":"PeX support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":7,
                    "message":"Anonymous mode [OFF]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":8,
                    "message":"Encryption support [ON]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":9,
                    "message":"Embedded Tracker [OFF]",
                    "timestamp":1507969127871,
                    "type":2
                  },
                  {
                    "id":10,
                    "message":"UPnP / NAT-PMP support [ON]",
                    "timestamp":1507969127873,
                    "type":2
                  },
                  {
                    "id":11,
                    "message":"Web UI: Now listening on port 8080",
                    "timestamp":1507969127883,
                    "type":1
                  },
                  {
                    "id":12,
                    "message":"Options were saved successfully.",
                    "timestamp":1507969128055,
                    "type":1
                  },
                  {
                    "id":13,
                    "message":"qBittorrent is successfully listening on interface :: port: TCP/19036",
                    "timestamp":1507969128270,
                    "type":2
                  },
                  {
                    "id":14,
                    "message":"qBittorrent is successfully listening on interface 0.0.0.0 port: TCP/19036",
                    "timestamp":1507969128271,
                    "type":2
                  },
                  {
                    "id":15,
                    "message":"qBittorrent is successfully listening on interface 0.0.0.0 port: UDP/19036",
                    "timestamp":1507969128272,
                    "type":2
                  }
                ]
      security:
        - sid: []
  /log/peers:
    post:
      tags:
        - log
      summary: Get peer log
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-peer-log'
        description: WebUI-API on qBittorrent wiki
      operationId: logPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                last_known_id:
                  type: integer
                  format: int64
                  description: 'Exclude messages with "message id" <= `last_known_id` (default: `-1`)'
                  default: -1
              required:
                - last_known_id
        required: true
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                description: The response a JSON array. Each element of the array of objects (each object is the information relative to a peer) containing the following fields
                items:
                  $ref: '#/components/schemas/PeersLog'
      security:
        - sid: []
  /sync/maindata:
    post:
      tags:
        - sync
      summary: Get main data
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-main-data'
        description: WebUI-API on qBittorrent wiki
      operationId: syncMaindataPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                rid:
                  type: integer
                  format: int64
                  description: 'Response ID. If not provided, `rid=0` will be assumed. If the given `rid` is different from the one of last server reply, `full_update` will be `true` (see the server reply details for more info)'
            example: /api/v2/sync/maindata?rid=14
        required: true
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainData'
              example: |
                {
                  "rid":15,
                  "torrents":
                  {
                    "8c212779b4abde7c6bc608063a0d008b7e40ce32":
                    {
                        "state":"pausedUP"
                    }
                  }
                }
      security:
        - sid: []
  /sync/torrentPeers:
    post:
      tags:
        - sync
      summary: Get torrent peers data
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-peers-data'
        description: WebUI-API on qBittorrent wiki
      operationId: syncTorrentPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: Torrent hash
                rid:
                  type: integer
                  format: int64
                  description: 'Response ID. If not provided, `rid=0` will be assumed. If the given `rid` is different from the one of last server reply, `full_update` will be `true` (see the server reply details for more info)'
              required:
                - hash
            example: /api/v2/sync/torrentPeers?hash=8c212779b4abde7c6bc608063a0d008b7e40ce32?rid=14
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentPeers'
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /transfer/info:
    get:
      tags:
        - transfer
      summary: Get global transfer info
      description: This method returns info you usually see in qBt status bar.
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-global-transfer-info'
        description: WebUI-API on qBittorrent wiki
      operationId: transferInfoGet
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferInfo'
      security:
        - sid: []
  /transfer/speedLimitsMode:
    get:
      tags:
        - transfer
      summary: Get alternative speed limits state
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-alternative-speed-limits-state'
        description: WebUI-API on qBittorrent wiki
      operationId: transferSpeedLimitsModeGet
      responses:
        '200':
          description: All scenarios
          content:
            text/plain:
              schema:
                type: integer
                format: int32
                enum:
                  - 0
                  - 1
                description: 'The response is `1` if alternative speed limits are enabled, `0` otherwise.'
      security:
        - sid: []
  /transfer/toggleSpeedLimitsMode:
    get:
      tags:
        - transfer
      summary: Toggle alternative speed limits
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#toggle-alternative-speed-limits'
        description: WebUI-API on qBittorrent wiki
      operationId: transferToggleSpeedLimitsModeGet
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /transfer/downloadLimit:
    get:
      tags:
        - transfer
      summary: Get global download limit
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-global-download-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: transferDownloadLimitGet
      responses:
        '200':
          description: All scenarios
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                description: The response is the value of current global download speed limit in bytes/second; this value will be zero if no limit is applied.
      security:
        - sid: []
  /transfer/setDownloadLimit:
    post:
      tags:
        - transfer
      summary: Set global download limit
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-global-download-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: transferSetDownloadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  format: int64
                  description: The global download speed limit to set in bytes/second
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /transfer/uploadLimit:
    get:
      tags:
        - transfer
      summary: Get global upload limit
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-global-upload-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: transferUploadLimitGet
      responses:
        '200':
          description: All scenarios
          content:
            text/plain:
              schema:
                type: integer
                format: int64
                description: The response is the value of current global upload speed limit in bytes/second; this value will be zero if no limit is applied.
      security:
        - sid: []
  /transfer/setUploadLimit:
    post:
      tags:
        - transfer
      summary: Set global upload limit
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-global-upload-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: transferSetUploadLimitPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                limit:
                  type: integer
                  format: int64
                  description: The global upload speed limit to set in bytes/second
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /transfer/banPeers:
    post:
      tags:
        - transfer
      summary: Ban peers
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#ban-peers'
        description: WebUI-API on qBittorrent wiki
      operationId: transferBanPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                peers:
                  type: array
                  items:
                    type: string
                  description: 'The peer to ban, or multiple peers separated by a pipe `|`. Each peer is a colon-separated `host:port`'
            encoding:
              peers:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/info:
    post:
      tags:
        - torrents
      summary: Get torrent list
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsInfoPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                filter:
                  type: string
                  enum:
                    - all
                    - downloading
                    - seeding
                    - completed
                    - paused
                    - active
                    - inactive
                    - resumed
                    - stalled
                    - stalled_uploading
                    - stalled_downloading
                    - errored
                  description: 'Filter torrent list by state. Allowed state filters: `all`, `downloading`, `seeding`, `completed`, `paused`, `active`, `inactive`, `resumed`, `stalled`, `stalled_uploading`, `stalled_downloading`, `errored`'
                category:
                  type: string
                  description: 'Get torrents with the given category (empty string means "without category"; no "category" parameter means "any category" <- broken until [#11748](https://github.com/qbittorrent/qBittorrent/issues/11748) is resolved). Remember to URL-encode the category name. For example, `My category` becomes `My%20category`'
                tag:
                  type: string
                  description: 'Get torrents with the given tag (empty string means "without tag"; no "tag" parameter means "any tag". Remember to URL-encode the category name. For example, `My tag` becomes `My%20tag`'
                sort:
                  type: string
                  description: Sort torrents by given key. They can be sorted using any field of the response's JSON array (which are documented below) as the sort key.
                reverse:
                  type: boolean
                  description: Enable reverse sorting. Defaults to `false`
                  default: false
                limit:
                  type: integer
                  format: int64
                  description: Limit the number of torrents returned
                offset:
                  type: integer
                  format: int64
                  description: 'Set offset (if less than 0, offset from end)'
                hashes:
                  type: array
                  items:
                    type: string
                  description: Filter by hashes. Can contain multiple hashes separated by `|`
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
            example: /api/v2/torrents/info?filter=downloading&category=sample%20category&sort=ratio
        required: true
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TorrentInfo'
                description: The response is a JSON array with the following fields
                example: |
                  [
                    {
                      "dlspeed":9681262,
                      "eta":87,
                      "f_l_piece_prio":false,
                      "force_start":false,
                      "hash":"8c212779b4abde7c6bc608063a0d008b7e40ce32",
                      "category":"",
                      "tags": "",
                      "name":"debian-8.1.0-amd64-CD-1.iso",
                      "num_complete":-1,
                      "num_incomplete":-1,
                      "num_leechs":2,
                      "num_seeds":54,
                      "priority":1,
                      "progress":0.16108787059783936,
                      "ratio":0,
                      "seq_dl":false,
                      "size":657457152,
                      "state":"downloading",
                      "super_seeding":false,
                      "upspeed":0
                    }
                  ]
      security:
        - sid: []
  /torrents/properties:
    post:
      tags:
        - torrents
      summary: Get torrent generic properties
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-generic-properties'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsPropertiesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  description: The hash of the torrent you want to get the generic properties of
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentsProperties'
              example: |
                {
                  "addition_date":1438429165,
                  "comment":"\"Debian CD from cdimage.debian.org\"",
                  "completion_date":1438429234,
                  "created_by":"",
                  "creation_date":1433605214,
                  "dl_limit":-1,
                  "dl_speed":0,
                  "dl_speed_avg":9736015,
                  "eta":8640000,
                  "last_seen":1438430354,
                  "nb_connections":3,
                  "nb_connections_limit":250,
                  "peers":1,
                  "peers_total":89,
                  "piece_size":524288,
                  "pieces_have":1254,
                  "pieces_num":1254,
                  "reannounce":672,
                  "save_path":"/Downloads/debian-8.1.0-amd64-CD-1.iso",
                  "seeding_time":1128,
                  "seeds":1,
                  "seeds_total":254,
                  "share_ratio":0.00072121022562178299,
                  "time_elapsed":1197,
                  "total_downloaded":681521119,
                  "total_downloaded_session":681521119,
                  "total_size":657457152,
                  "total_uploaded":491520,
                  "total_uploaded_session":491520,
                  "total_wasted":23481724,
                  "up_limit":-1,
                  "up_speed":0,
                  "up_speed_avg":410
                }
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/trackers:
    post:
      tags:
        - torrents
      summary: Get torrent trackers
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-trackers'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsTrackersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: The hash of the torrent you want to get the trackers of
              required:
                - hash
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TorrentsTrackers'
                description: 'The response is a JSON array, where each element contains info about one tracker, with the following fields'
              example: |
                [
                  {
                  "msg":"",
                  "num_peers":100,
                  "status":2,
                  "url":"http://bttracker.debian.org:6969/announce"
                  }
                ]
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/webseeds:
    post:
      tags:
        - torrents
      summary: Get torrent web seeds
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-web-seeds'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentWebseedsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  description: The hash of the torrent you want to get the webseeds of
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TorrentsWebseeds'
                description: 'The response is a JSON array, where each element is information about one webseed, with the following fields'
                example: |
                  [
                    {
                      "url":"http://some_url/"
                    },
                    {
                      "url":"http://some_other_url/"
                    }
                  ]
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/files:
    post:
      tags:
        - torrents
      summary: Get torrent contents
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsFilesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: The hash of the torrent you want to get the contents of
                indexes:
                  type: array
                  items:
                    type: string
                  description: The indexes of the files you want to retrieve. `indexes` can contain multiple values separated by `|`.
              required:
                - hash
            encoding:
              indexes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TorrentsFiles'
                description: |
                  The response is:
                    - empty, if the torrent hash is invalid
                    - otherwise, a JSON array, where each element contains info about one file, with the following fields
                example: |
                  [
                      {
                        "index":0,
                        "is_seed":false,
                        "name":"debian-8.1.0-amd64-CD-1.iso",
                        "piece_range":[0,1253],
                        "priority":1,
                        "progress":0,
                        "size":657457152
                      }
                  ]
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/pieceStates:
    post:
      tags:
        - torrents
      summary: Get torrent pieces' states
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-pieces-states'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsPieceStatesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  description: The hash of the torrent you want to get the pieces' states of
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int32
                  enum:
                    - 0
                    - 1
                    - 2
                description: |
                  The response is:
                  - empty, if the torrent hash is invalid
                  - otherwise, an array of states (integers) of all pieces (in order) of a specific torrent.

                  Value meanings are defined as below:
                  | Value | Description        |
                  | ----- | ------------------ |
                  | 0     | Not downloaded yet |
                  | 1     | Now downloading    |
                  | 2     | Already downloaded |
                example:
                  - 0
                  - 0
                  - 2
                  - 1
                  - 0
                  - 0
                  - 2
                  - 1
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/pieceHashes:
    post:
      tags:
        - torrents
      summary: Get torrent pieces' hashes
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-pieces-hashes'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsPieceHashesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  description: The hash of the torrent you want to get the pieces' hashes of
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: |
                  The response is:
                  - empty, if the torrent hash is invalid
                  - otherwise, an array of hashes (strings) of all pieces (in order) of a specific torrent.
                example:
                  - 54eddd830a5b58480a6143d616a97e3a6c23c439
                  - f8a99d225aa4241db100f88407fc3bdaead583ab
                  - 928fb615b9bd4dd8f9e9022552c8f8f37ef76f58
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/pause:
    post:
      tags:
        - torrents
      summary: Pause torrents
      description: 'Requires knowing the torrent hashes. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#pause-torrents'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsPausePost
      requestBody:
        description: 'The hashes of the torrents you want to pause. `hashes` can contain multiple hashes separated by `|`, to pause multiple torrents, or set to `all`, to pause all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/resume:
    post:
      tags:
        - torrents
      summary: Resume torrents
      description: 'Requires knowing the torrent hashes. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#resume-torrents'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsResumePost
      requestBody:
        description: 'The hashes of the torrents you want to resume. `hashes` can contain multiple hashes separated by `|`, to resume multiple torrents, or set to `all`, to resume all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/delete:
    post:
      tags:
        - torrents
      summary: Delete torrents
      description: 'Requires knowing the torrent hashes. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#delete-torrents'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsDeletePost
      requestBody:
        description: 'The hashes of the torrents you want to delete. `hashes` can contain multiple hashes separated by `|`, to delete multiple torrents, or set to `all`, to delete all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Hashes'
                - type: object
                  properties:
                    deleteFiles:
                      type: boolean
                      description: 'If set to `true`, the downloaded data will also be deleted, otherwise has no effect.'
              required:
                - hashes
                - deleteFiles
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
              deleteFiles: false
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/recheck:
    post:
      tags:
        - torrents
      summary: Recheck torrents
      description: 'Requires knowing the torrent hashes. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#recheck-torrents'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRecheckPost
      requestBody:
        description: 'The hashes of the torrents you want to recheck. `hashes` can contain multiple hashes separated by `|`, to recheck multiple torrents, or set to `all`, to recheck all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/reannounce:
    post:
      tags:
        - torrents
      summary: Reannounce torrents
      description: 'Requires knowing the torrent hashes. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#reannounce-torrents'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsReannouncePost
      requestBody:
        description: 'The hashes of the torrents you want to reannounce. `hashes` can contain multiple hashes separated by `|`, to reannounce multiple torrents, or set to `all`, to reannounce all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/add:
    post:
      tags:
        - torrents
      summary: Add new torrent
      description: 'This method can add torrents from server local file or from URLs. `http://`, `https://`, `magnet:` and `bc://bt/` links are supported.'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-new-torrent'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsAddPost
      requestBody:
        description: |
          Add torrent from URLs example:
          ```
          POST /api/v2/torrents/add HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: multipart/form-data; boundary=---------------------------6688794727912
          Content-Length: length

          -----------------------------6688794727912
          Content-Disposition: form-data; name="urls"

          https://torcache.net/torrent/3B1A1469C180F447B77021074DBBCCAEF62611E7.torrent
          https://torcache.net/torrent/3B1A1469C180F447B77021074DBBCCAEF62611E8.torrent
          -----------------------------6688794727912
          Content-Disposition: form-data; name="savepath"

          C:/Users/qBit/Downloads
          -----------------------------6688794727912
          Content-Disposition: form-data; name="cookie"

          ui=28979218048197
          -----------------------------6688794727912
          Content-Disposition: form-data; name="category"

          movies
          -----------------------------6688794727912
          Content-Disposition: form-data; name="skip_checking"

          true
          -----------------------------6688794727912
          Content-Disposition: form-data; name="paused"

          true
          -----------------------------6688794727912
          Content-Disposition: form-data; name="root_folder"

          true
          -----------------------------6688794727912--
          ```

          Add torrents from files example:
          ```
          POST /api/v2/torrents/add HTTP/1.1
          Content-Type: multipart/form-data; boundary=-------------------------acebdf13572468
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Length: length

          ---------------------------acebdf13572468
          Content-Disposition: form-data; name="torrents"; filename="8f18036b7a205c9347cb84a253975e12f7adddf2.torrent"
          Content-Type: application/x-bittorrent

          file_binary_data_goes_here
          ---------------------------acebdf13572468
          Content-Disposition: form-data; name="torrents"; filename="UFS.torrent"
          Content-Type: application/x-bittorrent

          file_binary_data_goes_here
          ---------------------------acebdf13572468--
          ```
          The above example will add two torrent files. `file_binary_data_goes_here` represents raw data of torrent file (basically a byte array).
        content:
          multipart/form-data:
            schema:
              oneOf:
                - $ref: '#/components/schemas/AddTorrentsURLs'
                - $ref: '#/components/schemas/AddTorrentsFiles'
            encoding:
              torrents:
                contentType: application/x-bittorrent
              tags:
                style: form
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '415':
          description: Torrent file is not valid
      security:
        - sid: []
  /torrents/addTrackers:
    post:
      tags:
        - torrents
      summary: Add trackers to torrent
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-trackers-to-torrent'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsAddTrackersPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/addTrackers HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hash=8c212779b4abde7c6bc608063a0d008b7e40ce32&urls=http://192.168.0.1/announce%0Audp://192.168.0.1:3333/dummyAnnounce
          ```
          This adds two trackers to torrent with hash `8c212779b4abde7c6bc608063a0d008b7e40ce32`. Note `%0A` (aka LF newline) between trackers. Ampersand in tracker urls MUST be escaped.
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  example: 8c212779b4abde7c6bc608063a0d008b7e40ce32
                urls:
                  type: string
                  example: 'http://192.168.0.1/announce%0Audp://192.168.0.1:3333/dummyAnnounce'
              required:
                - hash
                - urls
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
        '404':
          description: Torrent hash was not found
      security:
        - sid: []
  /torrents/editTracker:
    post:
      tags:
        - torrents
      summary: Edit trackers
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#edit-trackers'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsEditTrackerPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: The hash of the torrent
                origUrl:
                  type: string
                  description: The tracker URL you want to edit
                newUrl:
                  type: string
                  description: The new URL to replace the `origUrl`
              required:
                - hash
                - origUrl
                - newUrl
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: '`newUrl` is not a valid URL'
        '404':
          description: Torrent hash was not found
        '409':
          description: '`newUrl` already exists for the torrent or `origUrl` was not found'
      security:
        - sid: []
  /torrents/removeTrackers:
    post:
      tags:
        - torrents
      summary: Remove trackers
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-trackers'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRemoveTrackersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: The hash of the torrent
                urls:
                  type: array
                  items:
                    type: string
                  description: 'URLs to remove, separated by `|`'
              required:
                - hash
                - urls
            encoding:
              urls:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '404':
          description: Torrent hash was not found
        '409':
          description: All `urls` were not found
      security:
        - sid: []
  /torrents/addPeers:
    post:
      tags:
        - torrents
      summary: Add peers
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-peers'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsAddPeersPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hashes:
                  type: array
                  items:
                    type: string
                  description: 'The hash of the torrent, or multiple hashes separated by a pipe `|`'
                peers:
                  type: array
                  items:
                    type: string
                  description: 'The peer to add, or multiple peers separated by a pipe `|`. Each peer is a colon-separated `host:port`'
              required:
                - hashes
                - peers
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
              peers:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: None of the supplied peers are valid
      security:
        - sid: []
  /torrents/increasePrio:
    post:
      tags:
        - torrents
      summary: Increase torrent priority
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#increase-torrent-priority'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsIncreasePrioPost
      requestBody:
        description: 'The hashes of the torrents you want to increase the priority of. `hashes` can contain multiple hashes separated by `|`, to increase the priority of multiple torrents, or set to `all`, to increase the priority of all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Torrent queueing is not enabled
      security:
        - sid: []
  /torrents/decreasePrio:
    post:
      tags:
        - torrents
      summary: Decrease torrent priority
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#decrease-torrent-priority'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsDecreasePrioPost
      requestBody:
        description: 'The hashes of the torrents you want to decrease the priority of. `hashes` can contain multiple hashes separated by `|`, to decrease the priority of multiple torrents, or set to `all`, to decrease the priority of all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Torrent queueing is not enabled
      security:
        - sid: []
  /torrents/topPrio:
    post:
      tags:
        - torrents
      summary: Maximal torrent priority
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#maximal-torrent-priority'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsTopPrioPost
      requestBody:
        description: 'The hashes of the torrents you want to set to the maximum priority. `hashes` can contain multiple hashes separated by `|`, to set multiple torrents to the maximum priority, or set to `all`, to set all torrents to the maximum priority.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Torrent queueing is not enabled
      security:
        - sid: []
  /torrents/bottomPrio:
    post:
      tags:
        - torrents
      summary: Minimal torrent priority
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#minimal-torrent-priority'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsBottomPrioPost
      requestBody:
        description: 'The hashes of the torrents you want to set to the minimum priority. `hashes` can contain multiple hashes separated by `|`, to set multiple torrents to the minimum priority, or set to `all`, to set all torrents to the minimum priority.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Torrent queueing is not enabled
      security:
        - sid: []
  /torrents/filePrio:
    post:
      tags:
        - torrents
      summary: Set file priority
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-file-priority'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsFilePrioPost
      requestBody:
        description: |
          `id` values correspond to file position inside the array returned by [torrent contents API](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents), e.g. `id=0` for first file, `id=1` for second file, etc.

          Since 2.8.2 it is reccomended to use `index` field returned by [torrent contents API](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents) (since the files can be filtered and the `index` value may differ from the position inside the response array).
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: The hash of the torrent
                id:
                  type: array
                  items:
                    type: integer
                    format: int64
                  description: 'File ids, separated by `|`'
                priority:
                  type: integer
                  format: int32
                  enum:
                    - 0
                    - 1
                    - 6
                    - 7
                  description: 'File priority to set (consult [torrent contents API](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-contents) for possible values)'
              required:
                - hash
                - id
                - priority
            encoding:
              id:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: Priority is invalid or At least one file `id` is not a valid integer
        '404':
          description: Torrent hash was not found
        '409':
          description: Torrent metadata hasn't downloaded yet or At least one file `id` was not found
      security:
        - sid: []
  /torrents/downloadLimit:
    post:
      tags:
        - torrents
      summary: Get torrent download limit
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-download-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsDownloadLimitPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/downloadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          Server reply (example):
          ```
          HTTP/1.1 200 OK
          content-type: application/json
          content-length: length

          {"8c212779b4abde7c6bc608063a0d008b7e40ce32":338944,"284b83c9c7935002391129fd97f43db5d7cc2ba0":123}
          ```
          `8c212779b4abde7c6bc608063a0d008b7e40ce32` is the hash of the torrent and `338944` its download speed limit in bytes per second; this value will be zero if no limit is applied.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 284b83c9c7935002391129fd97f43db5d7cc2ba0
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentsLimit'
      security:
        - sid: []
  /torrents/setDownloadLimit:
    post:
      tags:
        - torrents
      summary: Set torrent download limit
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-download-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetDownloadLimitPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setDownloadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&limit=131072
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all` `limit` is the download speed limit in bytes per second you want to set.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTorrentsLimit'
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/setShareLimits:
    post:
      tags:
        - torrents
      summary: Set torrent share limit
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-share-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetShareLimitsPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setShareLimits HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&ratioLimit=1.0&seedingTimeLimit=60
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Hashes'
                - type: object
                  properties:
                    ratioLimit:
                      type: number
                      format: float
                      description: '`ratioLimit` is the max ratio the torrent should be seeded until. `-2` means the global limit should be used, -1 means no limit.'
                    seedingTimeLimit:
                      type: number
                      format: float
                      description: '`seedingTimeLimit` is the max amount of time the torrent should be seeded. `-2` means the global limit should be used, `-1` means no limit.'
              required:
                - hashes
                - ratioLimit
                - seedingTimeLimit
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              ratioLimit: 1
              seedingTimeLimit: 60
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/uploadLimit:
    post:
      tags:
        - torrents
      summary: Get torrent upload limit
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-upload-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsUploadLimitPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/uploadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          Server reply (example):
          ```
          HTTP/1.1 200 OK
          content-type: application/json
          content-length: length

          {"8c212779b4abde7c6bc608063a0d008b7e40ce32":338944,"284b83c9c7935002391129fd97f43db5d7cc2ba0":123}
          ```
          `8c212779b4abde7c6bc608063a0d008b7e40ce32` is the hash of the torrent in the request and `338944` its upload speed limit in bytes per second; this value will be zero if no limit is applied.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 284b83c9c7935002391129fd97f43db5d7cc2ba0
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TorrentsLimit'
      security:
        - sid: []
  /torrents/setUploadLimit:
    post:
      tags:
        - torrents
      summary: Set torrent upload limit
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-upload-limit'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetUploadLimitPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setUploadLimit HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&limit=131072
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all` `limit` is the upload speed limit in bytes per second you want to set.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTorrentsLimit'
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/setLocation:
    post:
      tags:
        - torrents
      summary: Set torrent location
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-location'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetLocationPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setLocation HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&location=/mnt/nfs/media
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Hashes'
                - type: object
                  properties:
                    location:
                      type: string
                      description: '`location` is the location to download the torrent to. If the location doesn''t exist, the torrent''s location is unchanged.'
              required:
                - hashes
                - location
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              location: /mnt/nfs/media
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: Save path is empty
        '403':
          description: User does not have write access to directory
        '409':
          description: Unable to create save path directory
      security:
        - sid: []
  /torrents/rename:
    post:
      tags:
        - torrents
      summary: Set torrent name
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-name'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRenamePost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/rename HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hash=8c212779b4abde7c6bc608063a0d008b7e40ce32&name=This%20is%20a%20test
          ```
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  example: 8c212779b4abde7c6bc608063a0d008b7e40ce32
                name:
                  type: string
                  example: This%20is%20a%20test
              required:
                - hash
                - name
        required: true
      responses:
        '200':
          description: All other scenarios
        '404':
          description: Torrent hash is invalid
        '409':
          description: Torrent name is empty
      security:
        - sid: []
  /torrents/setCategory:
    post:
      tags:
        - torrents
      summary: Set torrent category
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-torrent-category'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetCategoryPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setCategory HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&category=CategoryName
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Hashes'
                - type: object
                  properties:
                    category:
                      type: string
                      description: '`category` is the torrent category you want to set.'
              required:
                - hashes
                - category
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              category: CategoryName
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Category name does not exist
      security:
        - sid: []
  /torrents/categories:
    get:
      tags:
        - torrents
      summary: Get all categories
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-categories'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsCategoriesGet
      responses:
        '200':
          description: All scenarios
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/TorrentsCategory'
                example: |
                  {
                      "Video": {
                          "name": "Video",
                          "savePath": "/home/user/torrents/video/"
                      },
                      "eBooks": {
                          "name": "eBooks",
                          "savePath": "/home/user/torrents/eBooks/"
                      }
                  }
      security:
        - sid: []
  /torrents/createCategory:
    post:
      tags:
        - torrents
      summary: Add new category
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-new-category'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsCreateCategoryPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/createCategory HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          category=CategoryName&savePath=/path/to/dir
          ```
          `category` is the category you want to create.
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Category'
            example:
              category: CategoryName
              savePath: /path/to/dir
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: Category name is empty
        '409':
          description: Category name is invalid
      security:
        - sid: []
  /torrents/editCategory:
    post:
      tags:
        - torrents
      summary: Edit category
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#edit-category'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsEditCategoryPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/editCategory HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          category=CategoryName&savePath=/path/to/save/torrents/to
          ```
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Category'
            example:
              category: CategoryName
              savePath: /path/to/save/torrents/to
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: Category name is empty
        '409':
          description: Category editing failed
      security:
        - sid: []
  /torrents/removeCategories:
    post:
      tags:
        - torrents
      summary: Remove categories
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-categories'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRemoveCategoriesPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/removeCategories HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          categories=Category1%0ACategory2
          ```
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                categories:
                  type: string
                  description: '`categories` can contain multiple cateogies separated by `\n` (%0A urlencoded)'
                  example: Category1%0ACategory2
              required:
                - categories
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/addTags:
    post:
      tags:
        - torrents
      summary: Add torrent tags
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-torrent-tags'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsAddTagsPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/addTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&tags=TagName1,TagName2
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          `tags` is the list of tags you want to add to passed torrents.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TorrentsTags'
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
              tags:
                style: form
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/removeTags:
    post:
      tags:
        - torrents
      summary: Remove torrent tags
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-torrent-tags'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRemoveTagsPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/removeTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&tags=TagName1,TagName2
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`

          `tags` is the list of tags you want to remove from passed torrents. Empty list removes all tags from relevant torrents.
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TorrentsTags'
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
              tags:
                style: form
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/tags:
    get:
      tags:
        - torrents
      summary: Get all tags
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-tags'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsTagsGet
      responses:
        '200':
          description: All scenarios
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                description: 'Returns all tags in JSON format, e.g.:'
                example: |
                  [
                      "Tag 1",
                      "Tag 2"
                  ]
      security:
        - sid: []
  /torrents/createTags:
    post:
      tags:
        - torrents
      summary: Create tags
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#create-tags'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsCreateTagsPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/createTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          tags=TagName1,TagName2
          ```
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: string
                  description: '`tags` is a list of tags you want to create. Can contain multiple tags separated by `,`.'
                  example:
                    - TagName1
                    - TagName2
              required:
                - tags
            encoding:
              tags:
                style: form
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/deleteTags:
    post:
      tags:
        - torrents
      summary: Delete tags
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#delete-tags'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsDeleteTagsPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/deleteTags HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          tags=TagName1,TagName2
          ```
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                tags:
                  type: array
                  items:
                    type: string
                  description: '`tags` is a list of tags you want to delete. Can contain multiple tags separated by `,`.'
                  example:
                    - TagName1
                    - TagName2
              required:
                - tags
            encoding:
              tags:
                style: form
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/setAutoManagement:
    post:
      tags:
        - torrents
      summary: Set automatic torrent management
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-automatic-torrent-management'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetAutoManagementPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setAutoManagement HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32|284b83c9c7935002391129fd97f43db5d7cc2ba0&enable=true
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/Hashes'
                - type: object
                  properties:
                    enable:
                      type: boolean
                      default: false
                      description: '`enable` is a boolean, affects the torrents listed in `hashes`, default is `false`'
              required:
                - hashes
                - enable
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 284b83c9c7935002391129fd97f43db5d7cc2ba0
              enable: true
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/toggleSequentialDownload:
    post:
      tags:
        - torrents
      summary: Toggle sequential download
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#toggle-sequential-download'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsToggleSequentialDownloadPost
      requestBody:
        description: 'The hashes of the torrents you want to toggle sequential download for. `hashes` can contain multiple hashes separated by `|`, to toggle sequential download for multiple torrents, or set to `all`, to toggle sequential download for all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/toggleFirstLastPiecePrio:
    post:
      tags:
        - torrents
      summary: Set first/last piece priority
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-firstlast-piece-priority'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsToggleFirstLastPiecePrioPost
      requestBody:
        description: 'The hashes of the torrents you want to toggle the first/last piece priority for. `hashes` can contain multiple hashes separated by `|`, to toggle the first/last piece priority for multiple torrents, or set to `all`, to toggle the first/last piece priority for all torrents.'
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hashes'
            example:
              hashes:
                - 8c212779b4abde7c6bc608063a0d008b7e40ce32
                - 54eddd830a5b58480a6143d616a97e3a6c23c439
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/setForceStart:
    post:
      tags:
        - torrents
      summary: Set force start
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-force-start'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetForceStartPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setForceStart HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32?value=true
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTorrentsValue'
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/setSuperSeeding:
    post:
      tags:
        - torrents
      summary: Set super seeding
      description: 'Requires knowing the torrent hash. You can get it from [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list).'
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-super-seeding'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsSetSuperSeedingPost
      requestBody:
        description: |
          ```
          POST /api/v2/torrents/setSuperSeeding HTTP/1.1
          User-Agent: Fiddler
          Host: 127.0.0.1
          Cookie: SID=your_sid
          Content-Type: application/x-www-form-urlencoded
          Content-Length: length

          hashes=8c212779b4abde7c6bc608063a0d008b7e40ce32?value=true
          ```
          `hashes` can contain multiple hashes separated by `|` or set to `all`
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetTorrentsValue'
            encoding:
              hashes:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /torrents/renameFile:
    post:
      tags:
        - torrents
      summary: Rename file
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rename-file'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRenameFilePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RenameTorrentFiles'
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: Missing `newPath` parameter
        '409':
          description: 'Invalid `newPath` or `oldPath`, or `newPath` already in use'
      security:
        - sid: []
  /torrents/renameFolder:
    post:
      tags:
        - torrents
      summary: Rename folder
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rename-folder'
        description: WebUI-API on qBittorrent wiki
      operationId: torrentsRenameFolderPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RenameTorrentFiles'
        required: true
      responses:
        '200':
          description: All other scenarios
        '400':
          description: Missing `newPath` parameter
        '409':
          description: 'Invalid `newPath` or `oldPath`, or `newPath` already in use'
      security:
        - sid: []
  /rss/addFolder:
    post:
      tags:
        - rss
      summary: Add folder
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-folder'
        description: WebUI-API on qBittorrent wiki
      operationId: rssAddFolderPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                path:
                  type: string
                  description: Full path of added folder (e.g. "The Pirate Bay\Top100")
              required:
                - path
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Failure to add folder
      security:
        - sid: []
  /rss/addFeed:
    post:
      tags:
        - rss
      summary: Add feed
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#add-feed'
        description: WebUI-API on qBittorrent wiki
      operationId: rssAddFeedPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: 'URL of RSS feed (e.g. "http://thepiratebay.org/rss//top100/200")'
                path:
                  type: string
                  description: Full path of added folder (e.g. "The Pirate Bay\Top100\Video")
              required:
                - url
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Failure to add feed
      security:
        - sid: []
  /rss/removeItem:
    post:
      tags:
        - rss
      summary: Remove item
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-item'
        description: WebUI-API on qBittorrent wiki
      operationId: rssRemoveItemPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - path
              properties:
                path:
                  type: string
                  description: Full path of removed item (e.g. "The Pirate Bay\Top100")
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Failure to remove item
      security:
        - sid: []
  /rss/moveItem:
    post:
      tags:
        - rss
      summary: Move item
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#move-item'
        description: WebUI-API on qBittorrent wiki
      operationId: rssMoveItemPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - itemPath
                - destPath
              properties:
                itemPath:
                  type: string
                  description: Current full path of item (e.g. "The Pirate Bay\Top100")
                destPath:
                  type: string
                  description: New full path of item (e.g. "The Pirate Bay")
        required: true
      responses:
        '200':
          description: All other scenarios
        '409':
          description: Failure to move item
      security:
        - sid: []
  /rss/items:
    post:
      tags:
        - rss
      summary: Get all items
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-items'
        description: WebUI-API on qBittorrent wiki
      operationId: rssItemsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                withData:
                  type: boolean
                  description: True if you need current feed articles
        required: true
      responses:
        '200':
          description: All other scenarios
          content:
            application/json:
              schema:
                type: object
                description: 'Returns all RSS items in JSON format, e.g.:'
                example: |
                  {
                      "HD-Torrents.org": "https://hd-torrents.org/rss.php",
                      "PowerfulJRE": "https://www.youtube.com/feeds/videos.xml?channel_id=UCzQUP1qoWDoEbmsQxvdjxgQ",
                      "The Pirate Bay": {
                          "Audio": "https://thepiratebay.org/rss//top100/100",
                          "Video": "https://thepiratebay.org/rss//top100/200"
                      }
                  }
      security:
        - sid: []
  /rss/markAsRead:
    post:
      tags:
        - rss
      summary: Mark as read
      description: If `articleId` is provided only the article is marked as read otherwise the whole feed is going to be marked as read.
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#mark-as-read'
        description: WebUI-API on qBittorrent wiki
      operationId: rssMarkAsReadPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                itemPath:
                  type: string
                  description: Current full path of item (e.g. "The Pirate Bay\Top100")
                articleId:
                  type: string
                  description: ID of article
              required:
                - itemPath
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /rss/refreshItem:
    post:
      tags:
        - rss
      summary: Refresh item
      description: Refreshes folder or feed.
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#refresh-item'
        description: WebUI-API on qBittorrent wiki
      operationId: rssRefreshItemPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                itemPath:
                  type: string
                  description: Current full path of item (e.g. "The Pirate Bay\Top100")
              required:
                - itemPath
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /rss/setRule:
    post:
      tags:
        - rss
      summary: Set auto-downloading rule
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#set-auto-downloading-rule'
        description: WebUI-API on qBittorrent wiki
      operationId: rssSetRulePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                ruleName:
                  type: string
                  description: Rule name (e.g. "Punisher")
                ruleDef:
                  $ref: '#/components/schemas/RssRuleDef'
                  example: |
                    {
                      "enabled": false,
                      "mustContain": "The *Punisher*",
                      "mustNotContain": "",
                      "useRegex": false,
                      "episodeFilter": "1x01-;",
                      "smartFilter": false,
                      "previouslyMatchedEpisodes": [
                      ],
                      "affectedFeeds": [
                          "http://showrss.info/user/134567.rss?magnets=true"
                      ],
                      "ignoreDays": 0,
                      "lastMatch": "20 Nov 2017 09:05:11",
                      "addPaused": true,
                      "assignedCategory": "",
                      "savePath": "C:/Users/JohnDoe/Downloads/Punisher"
                    }
              required:
                - ruleName
                - ruleDef
            encoding:
              ruleDef:
                contentType: application/json
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /rss/renameRule:
    post:
      tags:
        - rss
      summary: Rename auto-downloading rule
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rename-auto-downloading-rule'
        description: WebUI-API on qBittorrent wiki
      operationId: rssRenameRulePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - ruleName
                - newRuleName
              properties:
                ruleName:
                  type: string
                  description: Rule name (e.g. "Punisher")
                newRuleName:
                  type: string
                  description: New rule name (e.g. "The Punisher")
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /rss/removeRule:
    post:
      tags:
        - rss
      summary: Remove auto-downloading rule
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#remove-auto-downloading-rule'
        description: WebUI-API on qBittorrent wiki
      operationId: rssRemoveRulePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - ruleName
              properties:
                ruleName:
                  type: string
                  description: Rule name (e.g. "Punisher")
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /rss/rules:
    get:
      tags:
        - rss
      summary: Get all auto-downloading rules
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-auto-downloading-rules'
        description: WebUI-API on qBittorrent wiki
      operationId: rssRulesGet
      responses:
        '200':
          description: All scenarios
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/RssRuleDef'
                description: 'Returns all auto-downloading rules in JSON format, e.g.:'
                example: |
                  {
                    "The Punisher": {
                      "enabled": false,
                      "mustContain": "The *Punisher*",
                      "mustNotContain": "",
                      "useRegex": false,
                      "episodeFilter": "1x01-;",
                      "smartFilter": false,
                      "previouslyMatchedEpisodes": [
                      ],
                      "affectedFeeds": [
                          "http://showrss.info/user/134567.rss?magnets=true"
                      ],
                      "ignoreDays": 0,
                      "lastMatch": "20 Nov 2017 09:05:11",
                      "addPaused": true,
                      "assignedCategory": "",
                      "savePath": "C:/Users/JohnDoe/Downloads/Punisher"
                    }
                  }
      security:
        - sid: []
  /rss/matchingArticles:
    post:
      tags:
        - rss
      summary: Get all articles matching a rule
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-all-articles-matching-a-rule'
        description: WebUI-API on qBittorrent wiki
      operationId: rssMatchingArticlesPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - ruleName
              properties:
                ruleName:
                  type: string
                  description: Rule name (e.g. "Linux")
        required: true
      responses:
        '200':
          description: All scenarios
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
                description: 'Returns all articles that match a rule by feed name in JSON format, e.g.:'
                example: |
                  {
                    "DistroWatch":[
                        "sparkylinux-5.11-i686-minimalgui.iso.torrent",
                        "sparkylinux-5.11-x86_64-minimalgui.iso.torrent",
                        "sparkylinux-5.11-i686-xfce.iso.torrent",
                        "bluestar-linux-5.6.3-2020.04.09-x86_64.iso.torrent",
                        "robolinux64-mate3d-v10.10.iso.torrent",
                    ],
                    "Linuxtracker":[
                        "[Alpine Linux] alpine-extended-3.11.6",
                        "[Alpine Linux] alpine-standard-3.11.6",
                        "[Linuxfx] linuxfx10-wxs-lts-beta5.iso",
                        "[Linux Lite] linux-lite-5.0-rc1-64bit.iso (MULTI)",
                        "[Scientific Linux] SL-7.8-x86_64-Pack",
                        "[NixOS] nixos-plasma5-20.03.1418.5272327b81e-x86_64-linux.iso"
                    ]
                  }
      security:
        - sid: []
  /search/start:
    post:
      tags:
        - search
      summary: Start search
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#start-search'
        description: WebUI-API on qBittorrent wiki
      operationId: searchStartPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                pattern:
                  type: string
                  description: Pattern to search for (e.g. "Ubuntu 18.04")
                plugins:
                  type: array
                  items:
                    type: string
                  description: Plugins to use for searching (e.g. "legittorrents"). Supports multiple plugins separated by `|`. Also supports `all` and `enabled`
                category:
                  type: array
                  items:
                    type: string
                  description: Categories to limit your search to (e.g. "legittorrents"). Available categories depend on the specified `plugins`. Also supports `all`
              required:
                - pattern
                - plugins
                - category
            encoding:
              plugins:
                style: pipeDelimited
                explode: false
              category:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchJob'
                description: The response is a JSON object with the following fields
        '409':
          description: User has reached the limit of max `Running` searches (currently set to 5)
      security:
        - sid: []
  /search/stop:
    post:
      tags:
        - search
      summary: Stop search
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#stop-search'
        description: WebUI-API on qBittorrent wiki
      operationId: searchStopPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchJob'
              required:
                - id
        required: true
      responses:
        '200':
          description: All other scenarios
        '404':
          description: Search job was not found
      security:
        - sid: []
  /search/status:
    post:
      tags:
        - search
      summary: Get search status
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-search-status'
        description: WebUI-API on qBittorrent wiki
      operationId: searchStatusPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: 'ID of the search job. If not specified, all search jobs are returned'
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                description: The response is a JSON array of objects containing the following fields
                items:
                  $ref: '#/components/schemas/SearchJobStatus'
                example: |
                  [
                    {
                        "id": 12345,
                        "status": "Running",
                        "total": 170
                    }
                  ]
        '404':
          description: Search job was not found
      security:
        - sid: []
  /search/results:
    post:
      tags:
        - search
      summary: Get search results
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-search-results'
        description: WebUI-API on qBittorrent wiki
      operationId: searchResultsPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              allOf:
                - $ref: '#/components/schemas/SearchJob'
                - type: object
                  properties:
                    limit:
                      type: number
                      description: max number of results to return. 0 or negative means no limit
                    offset:
                      type: number
                      description: result to start at. A negative number means count backwards (e.g. -2 returns the 2 most recent results)
              required:
                - id
        required: true
      responses:
        '200':
          description: All other scenarios- see JSON below
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
                description: The response is a JSON object with the following fields
        '404':
          description: Search job was not found
        '409':
          description: 'Offset is too large, or too small (e.g. absolute value of negative number is greater than # results)'
      security:
        - sid: []
  /search/delete:
    post:
      tags:
        - search
      summary: Delete search
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#delete-search'
        description: WebUI-API on qBittorrent wiki
      operationId: searchDeletePost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ID of the search job
              required:
                - id
        required: true
      responses:
        '200':
          description: All other scenarios
        '404':
          description: Search job was not found
      security:
        - sid: []
  /search/plugins:
    get:
      tags:
        - search
      summary: Get search plugins
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-search-plugins'
        description: WebUI-API on qBittorrent wiki
      operationId: searchPluginsGet
      responses:
        '200':
          description: All scenarios- see JSON below
          content:
            application/json:
              schema:
                type: array
                description: The response is a JSON array of objects containing the following fields
                items:
                  $ref: '#/components/schemas/SearchPlugin'
                example: |
                  [
                    {
                        "enabled": true,
                        "fullName": "Legit Torrents",
                        "name": "legittorrents",
                        "supportedCategories": [{
                            "id": "all",
                            "name": "All categories"
                        }, {
                            "id": "anime",
                            "name": "Anime"
                        }, {
                            "id": "books",
                            "name": "Books"
                        }, {
                            "id": "games",
                            "name": "Games"
                        }, {
                            "id": "movies",
                            "name": "Movies"
                        }, {
                            "id": "music",
                            "name": "Music"
                        }, {
                            "id": "tv",
                            "name": "TV shows"
                        }],
                        "url": "http://www.legittorrents.info",
                        "version": "2.3"
                    }
                  ]
      security:
        - sid: []
  /search/installPlugin:
    post:
      tags:
        - search
      summary: Install search plugin
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#install-search-plugin'
        description: WebUI-API on qBittorrent wiki
      operationId: searchInstallPluginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                sources:
                  type: array
                  items:
                    type: string
                  description: 'Url or file path of the plugin to install (e.g. "https://raw.githubusercontent.com/qbittorrent/search-plugins/master/nova3/engines/legittorrents.py"). Supports multiple sources separated by `|`'
              required:
                - sources
            encoding:
              sources:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /search/uninstallPlugin:
    post:
      tags:
        - search
      summary: Uninstall search plugin
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#uninstall-search-plugin'
        description: WebUI-API on qBittorrent wiki
      operationId: searchUninstallPluginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                names:
                  type: array
                  items:
                    type: string
                  description: Name of the plugin to uninstall (e.g. "legittorrents"). Supports multiple names separated by `|`
              required:
                - names
            encoding:
              names:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /search/enablePlugin:
    post:
      tags:
        - search
      summary: Enable search plugin
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#enable-search-plugin'
        description: WebUI-API on qBittorrent wiki
      operationId: searchEnablePluginPost
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                names:
                  type: array
                  items:
                    type: string
                  description: Name of the plugin to enable/disable (e.g. "legittorrents"). Supports multiple names separated by `|`
                enable:
                  type: boolean
                  description: Whether the plugins should be enabled
              required:
                - names
                - enable
            encoding:
              names:
                style: pipeDelimited
                explode: false
        required: true
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
  /search/updatePlugins:
    post:
      tags:
        - search
      summary: Update search plugins
      externalDocs:
        url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#update-search-plugins'
        description: WebUI-API on qBittorrent wiki
      operationId: searchUpdatePluginsPost
      responses:
        '200':
          description: All scenarios
      security:
        - sid: []
components:
  schemas:
    BuildInfo:
      type: object
      description: The response is a JSON object containing the following fields
      properties:
        qt:
          type: string
        libtorrent:
          type: string
        boost:
          type: string
        openssl:
          type: string
        bitness:
          type: integer
          format: int32
    Preferences:
      type: object
      additionalProperties: true
      description: 'Possible fields:'
      properties:
        locale:
          type: string
          description: Currently selected language (e.g. en_GB for English)
        create_subfolder_enabled:
          type: boolean
          description: True if a subfolder should be created when adding a torrent
        start_paused_enabled:
          type: boolean
          description: True if torrents should be added in a Paused state
        auto_delete_mode:
          type: integer
          description: TODO
        preallocate_all:
          type: boolean
          description: True if disk space should be pre-allocated for all files
        incomplete_files_ext:
          type: boolean
          description: True if ".!qB" should be appended to incomplete files
        auto_tmm_enabled:
          type: boolean
          description: True if Automatic Torrent Management is enabled by default
        torrent_changed_tmm_enabled:
          type: boolean
          description: True if torrent should be relocated when its Category changes
        save_path_changed_tmm_enabled:
          type: boolean
          description: True if torrent should be relocated when the default save path changes
        category_changed_tmm_enabled:
          type: boolean
          description: True if torrent should be relocated when its Category's save path changes
        save_path:
          type: string
          description: 'Default save path for torrents, separated by slashes'
        temp_path_enabled:
          type: boolean
          description: True if folder for incomplete torrents is enabled
        temp_path:
          type: string
          description: 'Path for incomplete torrents, separated by slashes'
        scan_dirs:
          type: object
          additionalProperties:
            oneOf:
              - type: integer
                enum:
                  - 0
                  - 1
              - type: string
          description: |
            Property: directory to watch for torrent files, value: where torrents loaded from this directory should be downloaded to (see list of possible values below). Slashes are used as path separators; multiple key/value pairs can be specified

            | Value                  | Description                       |
            | ---------------------- | --------------------------------- |
            | 0                      | Download to the monitored folder  |
            | 1                      | Download to the default save path |
            | "/path/to/download/to" | Download to this path             |
        export_dir:
          type: string
          description: Path to directory to copy .torrent files to. Slashes are used as path separators
        export_dir_fin:
          type: string
          description: Path to directory to copy .torrent files of completed downloads to. Slashes are used as path separators
        mail_notification_enabled:
          type: boolean
          description: True if e-mail notification should be enabled
        mail_notification_sender:
          type: string
          description: e-mail where notifications should originate from
        mail_notification_email:
          type: string
          description: e-mail to send notifications to
        mail_notification_smtp:
          type: string
          description: smtp server for e-mail notifications
        mail_notification_ssl_enabled:
          type: boolean
          description: True if smtp server requires SSL connection
        mail_notification_auth_enabled:
          type: boolean
          description: True if smtp server requires authentication
        mail_notification_username:
          type: string
          description: Username for smtp authentication
        mail_notification_password:
          type: string
          format: password
          description: Password for smtp authentication
        autorun_enabled:
          type: boolean
          description: True if external program should be run after torrent has finished downloading
        autorun_program:
          type: string
          description: 'Program path/name/arguments to run if `autorun_enabled` is enabled; path is separated by slashes; you can use `%f` and `%n` arguments, which will be expanded by qBittorent as path_to_torrent_file and torrent_name (from the GUI; not the .torrent file name) respectively'
        queueing_enabled:
          type: boolean
          description: True if torrent queuing is enabled
        max_active_downloads:
          type: integer
          format: int64
          description: Maximum number of active simultaneous downloads
        max_active_torrents:
          type: integer
          format: int64
          description: Maximum number of active simultaneous downloads and uploads
        max_active_uploads:
          type: integer
          format: int64
          description: Maximum number of active simultaneous uploads
        dont_count_slow_torrents:
          type: boolean
          description: 'If true torrents w/o any activity (stalled ones) will not be counted towards `max_active_*` limits; see [dont_count_slow_torrents](https://www.libtorrent.org/reference-Settings.html#dont_count_slow_torrents) for more information'
          externalDocs:
            url: 'https://www.libtorrent.org/reference-Settings.html#dont_count_slow_torrents'
            description: libtorrent settings reference
        slow_torrent_dl_rate_threshold:
          type: integer
          format: int64
          description: Download rate in KiB/s for a torrent to be considered "slow"
        slow_torrent_ul_rate_threshold:
          type: integer
          format: int64
          description: Upload rate in KiB/s for a torrent to be considered "slow"
        slow_torrent_inactive_timer:
          type: integer
          format: int64
          description: Seconds a torrent should be inactive before considered "slow"
        max_ratio_enabled:
          type: boolean
          description: True if share ratio limit is enabled
        max_ratio:
          type: number
          format: float
          description: Get the global share ratio limit
        max_ratio_act:
          type: integer
          format: int64
          enum:
            - 0
            - 1
          description: |
            Action performed when a torrent reaches the maximum share ratio. See list of possible values here below.

            | Value | Description    |
            | ----- | -------------- |
            | 0     | Pause torrent  |
            | 1     | Remove torrent |
        listen_port:
          type: integer
          format: int32
          description: Port for incoming connections
        upnp:
          type: boolean
          description: True if UPnP/NAT-PMP is enabled
        random_port:
          type: boolean
          description: True if the port is randomly selected
        dl_limit:
          type: integer
          format: int64
          description: Global download speed limit in KiB/s; `-1` means no limit is applied
        up_limit:
          type: integer
          format: int64
          description: Global upload speed limit in KiB/s; `-1` means no limit is applied
        max_connec:
          type: integer
          format: int64
          description: Maximum global number of simultaneous connections
        max_connec_per_torrent:
          type: integer
          format: int64
          description: Maximum number of simultaneous connections per torrent
        max_uploads:
          type: integer
          format: int64
          description: Maximum number of upload slots
        max_uploads_per_torrent:
          type: integer
          format: int64
          description: Maximum number of upload slots per torrent
        stop_tracker_timeout:
          type: integer
          format: int64
          description: Timeout in seconds for a `stopped` announce request to trackers
        enable_piece_extent_affinity:
          type: boolean
          description: True if the advanced libtorrent option `piece_extent_affinity` is enabled
        bittorrent_protocol:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
          description: |
            Bittorrent Protocol to use (see list of possible values below)

            | Value | Description |
            | ----- | ----------- |
            | 0     | TCP and μTP |
            | 1     | TCP         |
            | 2     | μTP         |
        limit_utp_rate:
          type: boolean
          description: 'True if `[du]l_limit` should be applied to uTP connections; this option is only available in qBittorent built against libtorrent version 0.16.X and higher'
        limit_tcp_overhead:
          type: boolean
          description: 'True if `[du]l_limit` should be applied to estimated TCP overhead (service data: e.g. packet headers)'
        limit_lan_peers:
          type: boolean
          description: 'True if `[du]l_limit` should be applied to peers on the LAN'
        alt_dl_limit:
          type: integer
          format: int64
          description: Alternative global download speed limit in KiB/s
        alt_up_limit:
          type: integer
          format: int64
          description: Alternative global upload speed limit in KiB/s
        scheduler_enabled:
          type: boolean
          description: True if alternative limits should be applied according to schedule
        schedule_from_hour:
          type: integer
          format: int32
          description: Scheduler starting hour
        schedule_from_min:
          type: integer
          format: int32
          description: Scheduler starting minute
        schedule_to_hour:
          type: integer
          format: int32
          description: Scheduler ending hour
        schedule_to_min:
          type: integer
          format: int32
          description: Scheduler ending minute
        scheduler_days:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
            - 6
            - 7
            - 8
            - 9
          description: |
            Scheduler days. See possible values here below

            | Value | Description     |
            | ----- | --------------- |
            | 0     | Every day       |
            | 1     | Every weekday   |
            | 2     | Every weekend   |
            | 3     | Every Monday    |
            | 4     | Every Tuesday   |
            | 5     | Every Wednesday |
            | 6     | Every Thursday  |
            | 7     | Every Friday    |
            | 8     | Every Saturday  |
            | 9     | Every Sunday    |
        dht:
          type: boolean
          description: True if DHT is enabled
        pex:
          type: boolean
          description: True if PeX is enabled
        lsd:
          type: boolean
          description: True if LSD is enabled
        encryption:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
          description: |
            See list of possible values here below

            | Value | Description          |
            | ----- | -------------------- |
            | 0     | Prefer encryption    |
            | 1     | Force encryption on  |
            | 2     | Force encryption off |
        anonymous_mode:
          type: boolean
          description: 'If true anonymous mode will be enabled; read more [here](https://github.com/qbittorrent/qBittorrent/wiki/Anonymous-Mode); this option is only available in qBittorent built against libtorrent version 0.16.X and higher'
          externalDocs:
            url: 'https://github.com/qbittorrent/qBittorrent/wiki/Anonymous-Mode'
            description: qBittorrent wiki
        proxy_type:
          type: integer
          format: int32
          enum:
            - -1
            - 0
            - 1
            - 2
            - 3
            - 4
            - 5
          description: |
            See list of possible values here below

            | Value | Description                         |
            | ----- | ----------------------------------- |
            | -1    | Proxy is disabled                   |
            | 0     | Prefer encryption                   |
            | 1     | HTTP proxy without authentication   |
            | 2     | SOCKS5 proxy without authentication |
            | 3     | HTTP proxy with authentication      |
            | 4     | SOCKS5 proxy with authentication    |
            | 5     | SOCKS4 proxy without authentication |
        proxy_ip:
          type: string
          description: Proxy IP address or domain name
        proxy_port:
          type: integer
          format: int32
          description: Proxy port
        proxy_peer_connections:
          type: boolean
          description: True if peer and web seed connections should be proxified; this option will have any effect only in qBittorent built against libtorrent version 0.16.X and higher
        proxy_auth_enabled:
          type: boolean
          description: True proxy requires authentication; doesn't apply to SOCKS4 proxies
        proxy_username:
          type: string
          description: Username for proxy authentication
        proxy_password:
          type: string
          format: password
          description: Password for proxy authentication
        proxy_torrents_only:
          type: boolean
          description: True if proxy is only used for torrents
        ip_filter_enabled:
          type: boolean
          description: True if external IP filter should be enabled
        ip_filter_path:
          type: string
          description: 'Path to IP filter file (.dat, .p2p, .p2b files are supported); path is separated by slashes'
        ip_filter_trackers:
          type: boolean
          description: True if IP filters are applied to trackers
        web_ui_domain_list:
          type: array
          items:
            type: string
          description: Comma-separated list of domains to accept when performing Host header validation
        web_ui_address:
          type: string
          description: IP address to use for the WebUI
        web_ui_port:
          type: integer
          format: int32
          description: WebUI port
        web_ui_upnp:
          type: boolean
          description: True if UPnP is used for the WebUI port
        web_ui_username:
          type: string
          description: WebUI username
        web_ui_csrf_protection_enabled:
          type: boolean
          description: True if WebUI CSRF protection is enabled
        web_ui_clickjacking_protection_enabled:
          type: boolean
          description: True if WebUI clickjacking protection is enabled
        web_ui_secure_cookie_enabled:
          type: boolean
          description: True if WebUI cookie `Secure` flag is enabled
        web_ui_max_auth_fail_count:
          type: integer
          format: int64
          description: Maximum number of authentication failures before WebUI access ban
        web_ui_ban_duration:
          type: integer
          format: int64
          description: WebUI access ban duration in seconds
        web_ui_session_timeout:
          type: integer
          format: int64
          description: Seconds until WebUI is automatically signed off
        web_ui_host_header_validation_enabled:
          type: boolean
          description: True if WebUI host header validation is enabled
        bypass_local_auth:
          type: boolean
          description: True if authentication challenge for loopback address (127.0.0.1) should be disabled
        bypass_auth_subnet_whitelist_enabled:
          type: boolean
          description: True if webui authentication should be bypassed for clients whose ip resides within (at least) one of the subnets on the whitelist
        bypass_auth_subnet_whitelist:
          type: array
          items:
            type: string
          description: (White)list of ipv4/ipv6 subnets for which webui authentication should be bypassed; list entries are separated by commas
        alternative_webui_enabled:
          type: boolean
          description: True if an alternative WebUI should be used
        alternative_webui_path:
          type: string
          description: File path to the alternative WebUI
        use_https:
          type: boolean
          description: True if WebUI HTTPS access is enabled
        ssl_key:
          type: string
          description: 'For API < v2.0.1: SSL keyfile contents (this is a not a path)'
        ssl_cert:
          type: string
          description: 'For API < v2.0.1: SSL certificate contents (this is a not a path)'
        web_ui_https_key_path:
          type: string
          description: 'For API ≥ v2.0.1: Path to SSL keyfile'
        web_ui_https_cert_path:
          type: string
          description: 'For API ≥ v2.0.1: Path to SSL certificate'
        dyndns_enabled:
          type: boolean
          description: True if server DNS should be updated dynamically
        dyndns_service:
          type: integer
          format: int32
          enum:
            - 0
            - 1
          description: |
            See list of possible values here below

            | Value | Description |
            | ----- | ----------- |
            | 0     | Use DyDNS   |
            | 1     | Use NOIP    |
        dyndns_username:
          type: string
          description: Username for DDNS service
        dyndns_password:
          type: string
          format: password
          description: Password for DDNS service
        dyndns_domain:
          type: string
          description: Your DDNS domain name
        rss_refresh_interval:
          type: integer
          format: int64
          description: RSS refresh interval
        rss_max_articles_per_feed:
          type: integer
          format: int64
          description: Max stored articles per RSS feed
        rss_processing_enabled:
          type: boolean
          description: Enable processing of RSS feeds
        rss_auto_downloading_enabled:
          type: boolean
          description: Enable auto-downloading of torrents from the RSS feeds
        rss_download_repack_proper_episodes:
          type: boolean
          description: 'For API ≥ v2.5.1: Enable downloading of repack/proper Episodes'
        rss_smart_episode_filters:
          type: string
          description: 'For API ≥ v2.5.1: List of RSS Smart Episode Filters'
        add_trackers_enabled:
          type: boolean
          description: Enable automatic adding of trackers to new torrents
        add_trackers:
          type: string
          description: List of trackers to add to new torrent
        web_ui_use_custom_http_headers_enabled:
          type: boolean
          description: 'For API ≥ v2.5.1: Enable custom http headers'
        web_ui_custom_http_headers:
          type: string
          description: 'For API ≥ v2.5.1: List of custom http headers'
        max_seeding_time_enabled:
          type: boolean
          description: True enables max seeding time
        max_seeding_time:
          type: integer
          format: int64
          description: Number of minutes to seed a torrent
        announce_ip:
          type: string
          description: TODO
        announce_to_all_tiers:
          type: boolean
          description: True always announce to all tiers
        announce_to_all_trackers:
          type: boolean
          description: True always announce to all trackers in a tier
        async_io_threads:
          type: integer
          format: int64
          description: Number of asynchronous I/O threads
        banned_IPs:
          type: string
          description: List of banned IPs
        checking_memory_use:
          type: integer
          format: int64
          description: Outstanding memory when checking torrents in MiB
        current_interface_address:
          type: string
          description: IP Address to bind to. Empty String means All addresses
        current_network_interface:
          type: string
          description: Network Interface used
        disk_cache:
          type: integer
          format: int64
          description: Disk cache used in MiB
        disk_cache_ttl:
          type: integer
          format: int64
          description: Disk cache expiry interval in seconds
        embedded_tracker_port:
          type: integer
          format: int32
          description: Port used for embedded tracker
        enable_coalesce_read_write:
          type: boolean
          description: True enables coalesce reads & writes
        enable_embedded_tracker:
          type: boolean
          description: True enables embedded tracker
        enable_multi_connections_from_same_ip:
          type: boolean
          description: True allows multiple connections from the same IP address
        enable_os_cache:
          type: boolean
          description: True enables os cache
        enable_upload_suggestions:
          type: boolean
          description: True enables sending of upload piece suggestions
        file_pool_size:
          type: integer
          format: int64
          description: File pool size
        outgoing_ports_max:
          type: integer
          format: int32
          description: 'Maximal outgoing port (0: Disabled)'
        outgoing_ports_min:
          type: integer
          format: int32
          description: 'Minimal outgoing port (0: Disabled)'
        recheck_completed_torrents:
          type: boolean
          description: True rechecks torrents on completion
        resolve_peer_countries:
          type: boolean
          description: True resolves peer countries
        save_resume_data_interval:
          type: integer
          format: int64
          description: Save resume data interval in min
        send_buffer_low_watermark:
          type: integer
          format: int64
          description: Send buffer low watermark in KiB
        send_buffer_watermark:
          type: integer
          format: int64
          description: Send buffer watermark in KiB
        send_buffer_watermark_factor:
          type: integer
          format: int32
          description: Send buffer watermark factor in percent
        socket_backlog_size:
          type: integer
          format: int64
          description: Socket backlog size
        upload_choking_algorithm:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
          description: |
            Upload choking algorithm used (see list of possible values below)

            | Value | Description    |
            | ----- | -------------- |
            | 0     | Round-robin    |
            | 1     | Fastest upload |
            | 2     | Anti-leech     |
        upload_slots_behavior:
          type: integer
          format: int32
          enum:
            - 0
            - 1
          description: |
            Upload slots behavior used (see list of possible values below)

            | Value | Description       |
            | ----- | ----------------- |
            | 0     | Fixed slots       |
            | 1     | Upload rate based |
        upnp_lease_duration:
          type: integer
          format: int64
          description: 'UPnP lease duration (0: Permanent lease)'
        utp_tcp_mixed_mode:
          type: integer
          format: int32
          enum:
            - 0
            - 1
          description: |
            μTP-TCP mixed mode algorithm (see list of possible values below)

            | Value | Description       |
            | ----- | ----------------- |
            | 0     | Prefer TCP        |
            | 1     | Peer proportional |
    SetPreferences:
      allOf:
        - $ref: '#/components/schemas/Preferences'
        - type: object
          properties:
            web_ui_password:
              type: string
              format: password
              description: 'For API ≥ v2.3.0: Plaintext WebUI password, not readable, write-only. For API < v2.3.0: MD5 hash of WebUI password, hash is generated from the following string: `username:Web UI Access:plain_text_web_ui_password`'
      description: A json object with key-value pairs of the settings you want to change and their new values.
    MainLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the message
        message:
          type: string
          description: Text of the message
        timestamp:
          type: integer
          format: int64
          description: Milliseconds since epoch
        type:
          type: integer
          format: int32
          enum:
            - 1
            - 2
            - 4
            - 8
          description: 'Type of the message: Log::NORMAL: `1`, Log::INFO: `2`, Log::WARNING: `4`, Log::CRITICAL: `8`'
    PeersLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID of the peer
        ip:
          type: string
          description: IP of the peer
        timestamp:
          type: integer
          format: int64
          description: Milliseconds since epoch
        blocked:
          type: boolean
          description: Whether or not the peer was blocked
        reason:
          type: string
          description: Reason of the block
    MainData:
      type: object
      description: The response is a JSON object with the following possible fields
      properties:
        rid:
          type: integer
          format: int64
          description: Response ID
        full_update:
          type: boolean
          description: Whether the response contains all the data or partial data
        torrents:
          type: object
          description: 'Property: torrent hash, value: same as [torrent list](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-torrent-list)'
          additionalProperties:
            $ref: '#/components/schemas/TorrentInfo'
        torrents_removed:
          type: array
          items:
            type: string
          description: List of hashes of torrents removed since last request
        categories:
          type: object
          description: Info for categories added since last request
          additionalProperties:
            $ref: '#/components/schemas/TorrentsCategory'
        categories_removed:
          type: array
          items:
            type: string
          description: List of categories removed since last request
        tags:
          type: array
          items:
            type: string
          description: List of tags added since last request
        tags_removed:
          type: array
          items:
            type: string
          description: List of tags removed since last request
        server_state:
          description: Global transfer info
          $ref: '#/components/schemas/TransferInfo'
    TorrentPeers:
      type: object
      description: The response is TODO
    TransferInfo:
      type: object
      description: |
        The response is a JSON object with the following fields

        In addition to the above in partial data requests (see [Get partial data](https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#get-partial-data) for more info):
      properties:
        dl_info_speed:
          type: integer
          format: int64
          description: Global download rate (bytes/s)
        dl_info_data:
          type: integer
          format: int64
          description: Data downloaded this session (bytes)
        up_info_speed:
          type: integer
          format: int64
          description: Global upload rate (bytes/s)
        up_info_data:
          type: integer
          format: int64
          description: Data uploaded this session (bytes)
        dl_rate_limit:
          type: integer
          format: int64
          description: Download rate limit (bytes/s)
        up_rate_limit:
          type: integer
          format: int64
          description: Upload rate limit (bytes/s)
        dht_nodes:
          type: integer
          format: int64
          description: DHT nodes connected to
        connection_status:
          type: string
          description: |
            Connection status. See possible values here below

            Possible values of connection_status:
            | Value        |
            | ------------ |
            | connected    |
            | firewalled   |
            | disconnected |
        queueing:
          type: boolean
          description: True if torrent queueing is enabled
        use_alt_speed_limits:
          type: boolean
          description: True if alternative speed limits are enabled
        refresh_interval:
          type: integer
          format: int64
          description: Transfer list refresh interval (milliseconds)
      example: |
        {
          "connection_status":"connected",
          "dht_nodes":386,
          "dl_info_data":681521119,
          "dl_info_speed":0,
          "dl_rate_limit":0,
          "up_info_data":10747904,
          "up_info_speed":0,
          "up_rate_limit":1048576
        }
    TorrentInfo:
      type: object
      properties:
        added_on:
          type: integer
          format: int64
          description: Time (Unix Epoch) when the torrent was added to the client
        amount_left:
          type: integer
          format: int64
          description: Amount of data left to download (bytes)
        auto_tmm:
          type: boolean
          description: Whether this torrent is managed by Automatic Torrent Management
        availability:
          type: number
          format: float
          description: Percentage of file pieces currently available
        category:
          type: string
          description: Category of the torrent
        completed:
          type: integer
          format: int64
          description: Amount of transfer data completed (bytes)
        completion_on:
          type: integer
          format: int64
          description: Time (Unix Epoch) when the torrent completed
        content_path:
          type: string
          description: 'Absolute path of torrent content (root path for multifile torrents, absolute file path for singlefile torrents)'
        dl_limit:
          type: integer
          format: int64
          description: Torrent download speed limit (bytes/s). `-1` if ulimited.
        dlspeed:
          type: integer
          format: int64
          description: Torrent download speed (bytes/s)
        downloaded:
          type: integer
          format: int64
          description: Amount of data downloaded
        downloaded_session:
          type: integer
          format: int64
          description: Amount of data downloaded this session
        eta:
          type: integer
          format: int64
          description: Torrent ETA (seconds)
        f_l_piece_prio:
          type: boolean
          description: True if first last piece are prioritized
        force_start:
          type: boolean
          description: True if force start is enabled for this torrent
        hash:
          type: string
          description: Torrent hash
        last_activity:
          type: integer
          format: int64
          description: Last time (Unix Epoch) when a chunk was downloaded/uploaded
        magnet_uri:
          type: string
          description: Magnet URI corresponding to this torrent
        max_ratio:
          type: number
          format: float
          description: Maximum share ratio until torrent is stopped from seeding/uploading
        max_seeding_time:
          type: integer
          format: int64
          description: Maximum seeding time (seconds) until torrent is stopped from seeding
        name:
          type: string
          description: Torrent name
        num_complete:
          type: integer
          format: int64
          description: Number of seeds in the swarm
        num_incomplete:
          type: integer
          format: int64
          description: Number of leechers in the swarm
        num_leechs:
          type: integer
          format: int64
          description: Number of leechers connected to
        num_seeds:
          type: integer
          format: int64
          description: Number of seeds connected to
        priority:
          type: integer
          format: int64
          description: Torrent priority. Returns -1 if queuing is disabled or torrent is in seed mode
        progress:
          type: number
          format: float
          description: Torrent progress (percentage/100)
        ratio:
          type: number
          format: float
          description: 'Torrent share ratio. Max ratio value: 9999.'
        ratio_limit:
          type: number
          format: float
          description: TODO (what is different from max_ratio?)
        save_path:
          type: string
          description: Path where this torrent's data is stored
        seeding_time:
          type: integer
          format: int64
          description: Torrent elapsed time while complete (seconds)
        seeding_time_limit:
          type: integer
          format: int64
          description: 'TODO (what is different from `max_seeding_time`?) seeding_time_limit is a per torrent setting, when Automatic Torrent Management is disabled, furthermore then max_seeding_time is set to seeding_time_limit for this torrent. If Automatic Torrent Management is enabled, the value is -2. And if max_seeding_time is unset it have a default value -1.'
        seen_complete:
          type: integer
          format: int64
          description: Time (Unix Epoch) when this torrent was last seen complete
        seq_dl:
          type: boolean
          description: True if sequential download is enabled
        size:
          type: integer
          format: int64
          description: Total size (bytes) of files selected for download
        state:
          type: string
          enum:
            - error
            - missingFiles
            - uploading
            - pausedUP
            - queuedUP
            - stalledUP
            - checkingUP
            - forcedUP
            - allocating
            - downloading
            - metaDL
            - pausedDL
            - queuedDL
            - stalledDL
            - checkingDL
            - forcedDL
            - checkingResumeData
            - moving
            - unknown
          description: |
            Torrent state. See table here below for the possible values

            | Value              | Description                                                   |
            | ------------------ | ------------------------------------------------------------- |
            | error              | Some error occurred, applies to paused torrents               |
            | missingFiles       | Torrent data files is missing                                 |
            | uploading          | Torrent is being seeded and data is being transferred         |
            | pausedUP           | Torrent is paused and has finished downloading                |
            | queuedUP           | Queuing is enabled and torrent is queued for upload           |
            | stalledUP          | Torrent is being seeded, but no connection were made          |
            | checkingUP         | Torrent has finished downloading and is being checked         |
            | forcedUP           | Torrent is forced to uploading and ignore queue limit         |
            | allocating         | Torrent is allocating disk space for download                 |
            | downloading        | Torrent is being downloaded and data is being transferred     |
            | metaDL             | Torrent has just started downloading and is fetching metadata |
            | pausedDL           | Torrent is paused and has NOT finished downloading            |
            | queuedDL           | Queuing is enabled and torrent is queued for download         |
            | stalledDL          | Torrent is being downloaded, but no connection were made      |
            | checkingDL         | Same as checkingUP, but torrent has NOT finished downloading  |
            | forcedDL           | Torrent is forced to downloading to ignore queue limit        |
            | checkingResumeData | Checking resume data on qBt startup                           |
            | moving             | Torrent is moving to another location                         |
            | unknown            | Unknown status                                                |
        super_seeding:
          type: boolean
          description: True if super seeding is enabled
        tags:
          type: string
          description: Comma-concatenated tag list of the torrent
        time_active:
          type: integer
          format: int64
          description: Total active time (seconds)
        total_size:
          type: integer
          format: int64
          description: Total size (bytes) of all file in this torrent (including unselected ones)
        tracker:
          type: string
          description: The first tracker with working status. Returns empty string if no tracker is working.
        up_limit:
          type: integer
          format: int64
          description: Torrent upload speed limit (bytes/s). `-1` if ulimited.
        uploaded:
          type: integer
          format: int64
          description: Amount of data uploaded
        uploaded_session:
          type: integer
          format: int64
          description: Amount of data uploaded this session
        upspeed:
          type: integer
          format: int64
          description: Torrent upload speed (bytes/s)
    TorrentsProperties:
      type: object
      description: |
        The response is:
        - empty, if the torrent hash is invalid
        - otherwise, a JSON object with the following fields

        NB: `-1` is returned if the type of the property is integer but its value is not known.
      properties:
        save_path:
          type: string
          description: Torrent save path
        creation_date:
          type: integer
          format: int64
          description: Torrent creation date (Unix timestamp)
        piece_size:
          type: integer
          format: int64
          description: Torrent piece size (bytes)
        comment:
          type: string
          description: Torrent comment
        total_wasted:
          type: integer
          format: int64
          description: Total data wasted for torrent (bytes)
        total_uploaded:
          type: integer
          format: int64
          description: Total data uploaded for torrent (bytes)
        total_uploaded_session:
          type: integer
          format: int64
          description: Total data uploaded this session (bytes)
        total_downloaded:
          type: integer
          format: int64
          description: Total data downloaded for torrent (bytes)
        total_downloaded_session:
          type: integer
          format: int64
          description: Total data downloaded this session (bytes)
        up_limit:
          type: integer
          format: int64
          description: Torrent upload limit (bytes/s)
        dl_limit:
          type: integer
          format: int64
          description: Torrent download limit (bytes/s)
        time_elapsed:
          type: integer
          format: int64
          description: Torrent elapsed time (seconds)
        seeding_time:
          type: integer
          format: int64
          description: Torrent elapsed time while complete (seconds)
        nb_connections:
          type: integer
          format: int64
          description: Torrent connection count
        nb_connections_limit:
          type: integer
          format: int64
          description: Torrent connection count limit
        share_ratio:
          type: number
          format: float
          description: Torrent share ratio
        addition_date:
          type: integer
          format: int64
          description: When this torrent was added (unix timestamp)
        completion_date:
          type: integer
          format: int64
          description: Torrent completion date (unix timestamp)
        created_by:
          type: string
          description: Torrent creator
        dl_speed_avg:
          type: integer
          format: int64
          description: Torrent average download speed (bytes/second)
        dl_speed:
          type: integer
          format: int64
          description: Torrent download speed (bytes/second)
        eta:
          type: integer
          format: int64
          description: Torrent ETA (seconds)
        last_seen:
          type: integer
          format: int64
          description: Last seen complete date (unix timestamp)
        peers:
          type: integer
          format: int64
          description: Number of peers connected to
        peers_total:
          type: integer
          format: int64
          description: Number of peers in the swarm
        pieces_have:
          type: integer
          format: int64
          description: Number of pieces owned
        pieces_num:
          type: integer
          format: int64
          description: Number of pieces of the torrent
        reannounce:
          type: integer
          format: int64
          description: Number of seconds until the next announce
        seeds:
          type: integer
          format: int64
          description: Number of seeds connected to
        seeds_total:
          type: integer
          format: int64
          description: Number of seeds in the swarm
        total_size:
          type: integer
          format: int64
          description: Torrent total size (bytes)
        up_speed_avg:
          type: integer
          format: int64
          description: Torrent average upload speed (bytes/second)
        up_speed:
          type: integer
          format: int64
          description: Torrent upload speed (bytes/second)
    TorrentsTrackers:
      type: object
      properties:
        url:
          type: string
          description: Tracker url
        status:
          type: integer
          format: int32
          enum:
            - 0
            - 1
            - 2
            - 3
            - 4
          description: |
            Tracker status. See the table below for possible values

            | Value | Description                                                                        |
            | ----- | ---------------------------------------------------------------------------------- |
            | 0     | Tracker is disabled (used for DHT, PeX, and LSD)                                   |
            | 1     | Tracker has not been contacted yet                                                 |
            | 2     | Tracker has been contacted and is working                                          |
            | 3     | Tracker is updating                                                                |
            | 4     | Tracker has been contacted, but it is not working (or doesn't send proper replies) |
        tier:
          type: integer
          format: int64
          description: 'Tracker priority tier. Lower tier trackers are tried before higher tiers. Tier numbers are valid when `>= 0`, `< 0` is used as placeholder when `tier` does not exist for special entries (such as DHT).'
        num_peers:
          type: integer
          format: int64
          description: 'Number of peers for current torrent, as reported by the tracker'
        num_seeds:
          type: integer
          format: int64
          description: 'Number of seeds for current torrent, asreported by the tracker'
        num_leeches:
          type: integer
          format: int64
          description: 'Number of leeches for current torrent, as reported by the tracker'
        num_downloaded:
          type: integer
          format: int64
          description: 'Number of completed downlods for current torrent, as reported by the tracker'
        msg:
          type: string
          description: Tracker message (there is no way of knowing what this message is - it's up to tracker admins)
    TorrentsWebseeds:
      type: object
      properties:
        url:
          type: string
          description: URL of the web seed
    TorrentsFiles:
      type: object
      properties:
        index:
          type: integer
          format: int64
          description: File index
        name:
          type: string
          description: File name (including relative path)
        size:
          type: integer
          format: int64
          description: File size (bytes)
        progress:
          type: number
          format: float
          description: File progress (percentage/100)
        priority:
          type: integer
          format: int64
          enum:
            - 0
            - 1
            - 6
            - 7
          description: |
            File priority. See possible values here below

            | Value | Description      |
            | ----- | ---------------- |
            | 0     | Do not download  |
            | 1     | Normal priority  |
            | 6     | High priority    |
            | 7     | Maximal priority |
        is_seed:
          type: boolean
          description: True if file is seeding/complete
        piece_range:
          type: array
          items:
            type: integer
            format: int64
          description: The first number is the starting piece index and the second number is the ending piece index (inclusive)
        availability:
          type: number
          format: float
          description: Percentage of file pieces currently available (percentage/100)
    Hashes:
      type: object
      properties:
        hashes:
          type: array
          items:
            type: string
      required:
        - hashes
    AddTorrentsURLs:
      allOf:
        - type: object
          properties:
            urls:
              type: string
              description: URLs separated with newlines
        - $ref: '#/components/schemas/AddTorrentsCommon'
      required:
        - urls
    AddTorrentsFiles:
      allOf:
        - type: object
          properties:
            torrents:
              type: array
              items:
                type: string
                format: binary
              description: Raw data of torrent file. `torrents` can be presented multiple times.
        - $ref: '#/components/schemas/AddTorrentsCommon'
      required:
        - torrents
    AddTorrentsCommon:
      type: object
      properties:
        savepath:
          type: string
          description: Download folder
        cookie:
          type: string
          description: Cookie sent to download the .torrent file
        category:
          type: string
          description: Category for the torrent
        tags:
          type: array
          items:
            type: string
          description: 'Tags for the torrent, split by '','''
        skip_checking:
          type: string
          enum:
            - 'true'
            - 'false'
          default: 'false'
          description: 'Skip hash checking. Possible values are `true`, `false` (default)'
        paused:
          type: string
          enum:
            - 'true'
            - 'false'
          default: 'false'
          description: 'Add torrents in the paused state. Possible values are `true`, `false` (default)'
        root_folder:
          type: string
          enum:
            - 'true'
            - 'false'
            - unset
          default: unset
          description: 'Create the root folder. Possible values are `true`, `false`, unset (default)'
        rename:
          type: string
          description: Rename torrent
        upLimit:
          type: integer
          format: int64
          description: Set torrent upload speed limit. Unit in bytes/second
        dlLimit:
          type: integer
          format: int64
          description: Set torrent download speed limit. Unit in bytes/second
        ratioLimit:
          type: number
          format: float
          description: Set torrent share ratio limit
        seedingTimeLimit:
          type: integer
          format: int64
          description: Set torrent seeding time limit. Unit in seconds
        autoTMM:
          type: boolean
          description: Whether Automatic Torrent Management should be used
        sequentialDownload:
          type: string
          enum:
            - 'true'
            - 'false'
          default: 'false'
          description: 'Enable sequential download. Possible values are `true`, `false` (default)'
        firstLastPiecePrio:
          type: string
          enum:
            - 'true'
            - 'false'
          default: 'false'
          description: 'Prioritize download first last piece. Possible values are `true`, `false` (default)'
    TorrentsLimit:
      type: object
      additionalProperties:
        type: integer
        format: int64
      example:
        8c212779b4abde7c6bc608063a0d008b7e40ce32: 338944
        284b83c9c7935002391129fd97f43db5d7cc2ba0: 123
    SetTorrentsLimit:
      allOf:
        - $ref: '#/components/schemas/Hashes'
        - type: object
          properties:
            limit:
              type: integer
              format: int64
      required:
        - hashes
        - limit
      example:
        hashes:
          - 8c212779b4abde7c6bc608063a0d008b7e40ce32
          - 284b83c9c7935002391129fd97f43db5d7cc2ba0
        limit: 131072
    TorrentsCategory:
      type: object
      properties:
        name:
          type: string
        savePath:
          type: string
    Category:
      type: object
      properties:
        category:
          type: string
        savePath:
          type: string
      required:
        - category
        - savePath
    TorrentsTags:
      allOf:
        - $ref: '#/components/schemas/Hashes'
        - type: object
          properties:
            tags:
              type: array
              items:
                type: string
      required:
        - hashes
        - tags
      example:
        hashes:
          - 8c212779b4abde7c6bc608063a0d008b7e40ce32
          - 284b83c9c7935002391129fd97f43db5d7cc2ba0
        tags:
          - TagName1
          - TagName2
    SetTorrentsValue:
      allOf:
        - $ref: '#/components/schemas/Hashes'
        - type: object
          properties:
            value:
              type: boolean
              default: false
              description: '`value` is a boolean, affects the torrents listed in `hashes`, default is `false`'
      required:
        - hashes
        - value
      example:
        hashes: 8c212779b4abde7c6bc608063a0d008b7e40ce32
        value: true
    RenameTorrentFiles:
      type: object
      properties:
        hash:
          type: string
          description: The hash of the torrent
        oldPath:
          type: string
          description: The old path of the torrent
        newPath:
          type: string
          description: The new path to use for the file
      required:
        - hash
        - oldPath
        - newPath
    RssRuleDef:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether the rule is enabled
        mustContain:
          type: string
          description: The substring that the torrent name must contain
        mustNotContain:
          type: string
          description: The substring that the torrent name must not contain
        useRegex:
          type: boolean
          description: Enable regex mode in "mustContain" and "mustNotContain"
        episodeFilter:
          type: string
          description: Episode filter definition
        smartFilter:
          type: boolean
          description: Enable smart episode filter
        previouslyMatchedEpisodes:
          type: array
          items:
            type: integer
            format: int64
          description: The list of episode IDs already matched by smart filter
        affectedFeeds:
          type: array
          items:
            type: string
          description: The feed URLs the rule applied to
        ignoreDays:
          type: number
          description: Ignore sunsequent rule matches
        lastMatch:
          type: string
          description: The rule last match time
        addPaused:
          type: boolean
          description: Add matched torrent in paused mode
        assignedCategory:
          type: string
          description: Assign category to the torrent
        savePath:
          type: string
          description: Save torrent to the given directory
      description: |
        JSON encoded rule definition

        Rule definition is JSON encoded dictionary with the following fields:
        | Field                     | Type   | Description                                             |
        | ------------------------- | ------ | ------------------------------------------------------- |
        | enabled                   | bool   | Whether the rule is enabled                             |
        | mustContain               | string | The substring that the torrent name must contain        |
        | mustNotContain            | string | The substring that the torrent name must not contain    |
        | useRegex                  | bool   | Enable regex mode in "mustContain" and "mustNotContain" |
        | episodeFilter             | string | Episode filter definition                               |
        | smartFilter               | bool   | Enable smart episode filter                             |
        | previouslyMatchedEpisodes | list   | The list of episode IDs already matched by smart filter |
        | affectedFeeds             | list   | The feed URLs the rule applied to                       |
        | ignoreDays                | number | Ignore sunsequent rule matches                          |
        | lastMatch                 | string | The rule last match time                                |
        | addPaused                 | bool   | Add matched torrent in paused mode                      |
        | assignedCategory          | string | Assign category to the torrent                          |
        | savePath                  | string | Save torrent to the given directory                     |
    SearchJob:
      type: object
      description: The response is a JSON object with the following fields
      properties:
        id:
          type: number
          description: ID of the search job
      example: |
        {
          "id": 12345
        }
    SearchJobStatus:
      allOf:
        - $ref: '#/components/schemas/SearchJob'
        - type: object
          properties:
            status:
              type: string
              enum:
                - Running
                - Stopped
              description: Current status of the search job (either `Running` or `Stopped`)
            total:
              type: number
              description: Total number of results. If the status is `Running` this number may contineu to increase
    SearchResult:
      type: object
      properties:
        descrLink:
          type: string
          description: URL of the torrent's description page
        fileName:
          type: string
          description: Name of the file
        fileSize:
          type: number
          description: Size of the file in Bytes
        fileUrl:
          type: string
          description: Torrent download link (usually either .torrent file or magnet link)
        nbLeechers:
          type: number
          description: Number of leechers
        nbSeeders:
          type: number
          description: Number of seeders
        siteUrl:
          type: string
          description: URL of the torrent site
    SearchResults:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
        status:
          type: string
          enum:
            - Running
            - Stopped
          description: Current status of the search job (either `Running` or `Stopped`)
        total:
          type: number
          description: Total number of results. If the status is `Running` this number may continue to increase
      example: |
        {
          "results": [
              {
                  "descrLink": "http://www.legittorrents.info/index.php?page=torrent-details&id=8d5f512e1acb687029b8d7cc6c5a84dce51d7a41",
                  "fileName": "Ubuntu-10.04-32bit-NeTV.ova",
                  "fileSize": -1,
                  "fileUrl": "http://www.legittorrents.info/download.php?id=8d5f512e1acb687029b8d7cc6c5a84dce51d7a41&f=Ubuntu-10.04-32bit-NeTV.ova.torrent",
                  "nbLeechers": 1,
                  "nbSeeders": 0,
                  "siteUrl": "http://www.legittorrents.info"
              },
              {
                  "descrLink": "http://www.legittorrents.info/index.php?page=torrent-details&id=d5179f53e105dc2c2401bcfaa0c2c4936a6aa475",
                  "fileName": "mangOH-Legato-17_06-Ubuntu-16_04.ova",
                  "fileSize": -1,
                  "fileUrl": "http://www.legittorrents.info/download.php?id=d5179f53e105dc2c2401bcfaa0c2c4936a6aa475&f=mangOH-Legato-17_06-Ubuntu-16_04.ova.torrent",
                  "nbLeechers": 0,
                  "nbSeeders": 59,
                  "siteUrl": "http://www.legittorrents.info"
              }
          ],
          "status": "Running",
          "total": 2
        }
    SearchPlugin:
      type: object
      properties:
        enabled:
          type: boolean
          description: Whether the plugin is enabled
        fullName:
          type: string
          description: Full name of the plugin
        name:
          type: string
          description: Short name of the plugin
        supportedCategories:
          type: array
          description: List of category objects
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        url:
          type: string
          description: URL of the torrent site
        version:
          type: string
          description: Installed version of the plugin
  securitySchemes:
    sid:
      type: apiKey
      name: SID
      in: cookie
tags:
  - name: auth
    description: |
      All Authentication API methods are under "auth", e.g.: `/api/v2/auth/methodName`.

      qBittorrent uses cookie-based authentication.
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#authentication'
      description: qBittorrent WebUI API documentation
  - name: app
    description: 'All Application API methods are under "app", e.g.: `/api/v2/app/methodName`.'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#application'
      description: qBittorrent WebUI API documentation
  - name: log
    description: 'All Log API methods are under "log", e.g.: `/api/v2/log/methodName.`'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#log'
      description: qBittorrent WebUI API documentation
  - name: sync
    description: 'Sync API implements requests for obtaining changes since the last request. All Sync API methods are under "sync", e.g.: `/api/v2/sync/methodName.`'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#sync'
      description: qBittorrent WebUI API documentation
  - name: transfer
    description: 'All Transfer info API methods are under "transfer", e.g.: `/api/v2/transfer/methodName.`'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#transfer-info'
      description: qBittorrent WebUI API documentation
  - name: torrents
    description: 'All Torrent management API methods are under "torrents", e.g.: `/api/v2/torrents/methodName.`'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#torrent-management'
      description: qBittorrent WebUI API documentation
  - name: rss
    description: 'All RSS API methods are under "rss", e.g.: `/api/v2/rss/methodName.`'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#rss-experimental'
      description: qBittorrent WebUI API documentation
  - name: search
    description: 'All Search API methods are under "search", e.g.: `/api/v2/search/methodName.`'
    externalDocs:
      url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)#search'
      description: qBittorrent WebUI API documentation
externalDocs:
  url: 'https://github.com/qbittorrent/qBittorrent/wiki/WebUI-API-(qBittorrent-4.1)'
  description: qBittorrent WebUI API documentation
